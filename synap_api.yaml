
---
openapi: "3.0.0"
info:  # (MANDATORY)
    title: "SYNAP WEB API"
    version: "0.0.1"  # major.minor.patch
    description: "WEB API for SYNAP"
    contact:
        name: "Cranium Ventures Pte Ltd"
        url:  "https://www.craniumventures.com"
        email: "info@craniumventures.com"
servers:
    -
        url: "https://sandbox01.craniumventures.com/synap/dev"
        description: "Sandbox Environment"
components:
    schemas:
        CursorRecordCountOnRequest:
            type: "object"
            properties:
                recordOffset:
                    type: "number"
                    description: "offset of record to retrieve from"
                recordCount:
                    type: "number"
                    description: "number of records to be retrieved"
            required:
                - recordOffset
        CursorOnRequest:
            type: "object"
            properties:
                identifier:
                    type: "string"
                recordOffset:
                    type: "number"
                    description: "offset of the record to retrieve"
                recordCount:
                    type: "number"
                    description: "number of records to be retrieved for this command"
            required:
                - identifier
                - recordOffset
        CursorOnResponse:
            type: "object"
            properties:
                identifier:
                    type: "string"
                    description: "identifier used to uniquely identify a cursor created by the system"
                totalRecords:
                    type: "number"
                    description: "total number of records a cursor holds"
        CursorRecordIdentifierOnResponse:
            type: "object"
            properties:
                recordIdentifier:
                    type: "string"
                    description: "record's identifier of a given cursor's context"
        RecordStatus:
            type: "string"
            description: "status of the record"
            enum:
                - active
                - inactive
                - suspensed
                - pendingApproval
                - disabled
                - locked
                - removed
                - noPassword
        RecordStatusObject:
            type: "object"
            properties:
                recordStatus:
                    $ref: "#/components/schemas/RecordStatus"
        IdentifierObject:
            type: "object"
            properties:
                identifier:
                    description: "unique identity of an object in a given scope"
                    type: "string"
        ContactAddress:
            description: "the plain text address for this contact; it will be empty if the actor is not the target user; this element holds the address which has been parsed by the system"
            type: "string"
        ContactAddressObject:
            type: "object"
            properties:
                address:
                    $ref: "#/components/schemas/ContactAddress"
        UserContactRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    recordStatus:
                        $ref: "#/components/schemas/RecordStatus"
                    class:
                        type: "number"
                        description: "the contact class"
                    identifier:
                        type: "string"
                        description: "a system generated key which can be used to retrieve this contact record"
                    maskedAddress:
                        type: "string"
                        description: "the contact address masked for security purposes; an application must only display the masked address even if a plain text address is present in the response"
                    address:
                        $ref: "#/components/schemas/ContactAddress"
                    originalAddress:
                        type: "string"
                        description: "the plain text address for this contact; it will be empty if the actor is not the target user; this element holds the address string as entered by the user when the record was created or updated"
                    flags:
                        type: "object"
                        properties:
                            verified:
                                type: "boolean"
                                description: "the record has been verified"
                            primary:
                                type: "boolean"
                                description: "this is a primary address"
                            default:
                                type: "boolean"
                                description: "this is a default address"
                            phone:
                                type: "boolean"
                                description: "this is a phone type record"
                            messageCapable:
                                type: "boolean"
                                description: "this type of address is capable of receiving notification messages"
                            url:
                                type: "boolean"
                                description: "this is a social media address record"
                            notification:
                                type: "boolean"
                                description: "this record can receive account notification messages from the system"
                            recovery:
                                type: "boolean"
                                description: "this record can be used for password and account recovery operations"
        UserRecord:
            type: "object"
            properties:
                rowId:
                    type: "number"
                recordStatus:
                    $ref: "#/components/schemas/RecordStatus"
                recordDateTime:
                    type: "string"
                    format: "date-time"
                createDateTime:
                    type: "string"
                    format: "date-time"
                name:
                    type: "string"
                identifier:
                    type: "string"
                externalIdentifier:
                    type: "string"
                groupIdentifier:
                    type: "string"
                policyIdentifier:
                    type: "string"
                organizationIdentifier:
                    type: "string"
                multiFactorIdentifier:
                    type: "string"
                multiFactorName:
                    type: "string"
                emailAddress:
                    type: "string"
                    format: "email"
                mobileNumber:
                    type: "string"
                lastFailedAuthenticateDateTime:
                    type: "string"
                    format: "date-time"
                lastLoginLocation:
                    type: "string"
                lastFailedLoginLocation:
                    type: "string"
                lockoutPeriod:
                    type: "string"
                failedAuthenticateAttemptCount:
                    type: "number"
                sessionExceededPolicy:
                    type: "number"
                loginShell:
                    type: "string"
                loginShellArguments:
                    type: "string"
                serverLoginScriptPath:
                    type: "string"
                homeDirectory:
                    type: "string"
                notificationOptInMap:
                    type: "string"
                restricted:
                    type: "string"
                preferName:
                    type: "string"
        UserRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    user:
                        $ref: "#/components/schemas/UserRecord"
        ResponseResult:
            type: "object"
            properties:
                code:
                    type: "string"
                    description: "success or error code"
                    example: "ErrorCode"
                    enum:
                        - Success
                        - Fail
                        - InvalidSessionToken
                        - InvalidRequestValues
                        - ServerTimeout
                        - SystemError
                        - InvalidProvider
                reason:
                    type: "string"
                    description: "reason for error occur"
                    example: "ErrorReason"
            required:
                - code
        AccessRightObjectNameOnRequest:
            type: "object"
            properties:
                name:
                    type: "string"
                    description: "name of the object which the rights are processed"
                    example: "frog"
        AccessRightActions:
            type: "object"
            description: "one or more actions"
            properties:
                <replace_with_action_name>:
                    type: "boolean"
                    description: "name of an action; values are ignored during retrieval however 'true' would mean an action to be granted and 'false' would mean an action to be revoked"
        CountryRecord:
            type: "object"
            properties:
                name:
                    type: "string"
                isoAlpha2Code:
                    type: "string"
                isoAlpha3Code:
                    type: "string"
                isoNumericCode:
                    type: "number"
        CurrencyRecord:
            type: "object"
            properties:
                name:
                    type: "string"
                isoAlphaCode:
                    type: "string"
                isoNumericCode:
                    type: "number"
                symbol:
                    type: "string"
                minorUnits:
                    type: "number"
                isPrefix:
                    type: "boolean"
        PaymentRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    payment:
                        type: "object"
                        properties:
                            recordDateTime:
                                type: "string"
                                format: "date-time"
                            applicationIdentifier:
                                type: "string"
                            messageTypeIdentifier:
                                type: "string"
                            processingCode:
                                type: "string"
                            traceNumber:
                                type: "string"
                            transmissionDateTime:
                                type: "string"
                                format: "date-time"
                            status:
                                type: "string"
                            acquirerInstitution:
                                type: "string"
                            switchSequence:
                                type: "string"
                            amount:
                                type: "number"
                            localTime:
                                type: "string"
                            localDate:
                                type: "string"
                                format: "date-time"
                            retrievalReferenceNumber:
                                type: "string"
                            currencyCode:
                                description: "The payment's currency in ISO numeric code"
                                type: "integer"
                                format: "int32"
                    settlement:
                        type: "object"
                        properties:
                            date:
                                type: "string"
                                format: "date-time"
                            amount:
                                type: "number"
                            rate:
                                type: "number"
                            currencyCode:
                                description: "The settlement's currency in ISO numeric code"
                                type: "integer"
                                format: "int32"
                    paymentInstrument:
                        type: "object"
                        properties:
                            maskedNumber:
                                type: "string"
                            encryptedNumber:
                                type: "string"
                            issuerInstitution:
                                type: "string"
                            countryCode:
                                type: "string"
                            currencyCode:
                                description: "The payment instrument's currency in ISO numeric code"
                                type: "integer"
                                format: "int32"
                            expiry:
                                type: "string"
                    refund:
                        type: "object"
                        properties:
                            amount:
                                type: "number"
                            date:
                                type: "string"
                                format: "date-time"
                    adjustment:
                        type: "object"
                        properties:
                            amount:
                                type: "number"
                            date:
                                type: "string"
                                format: "date-time"
                    merchant:
                        type: "object"
                        properties:
                            identifier:
                                type: "string"
                            categoryCode:
                                type: "string"
                            deviceIdentifier:
                                type: "string"
                            countryCode:
                                type: "string"
                            nameAndLocation:
                                type: "string"
                    customer:
                        type: "object"
                        properties:
                            name:
                                type: "string"
        PaymentTokenRecord:
            type: "object"
            properties:
                amount:
                    type: "number"
                minimumAmount:
                    type: "number"
                maximumAmount:
                    type: "number"
                currencyCode:
                    description: "The amount's currency in ISO numeric code"
                    type: "integer"
                    format: "int32"
                name:
                    description: "The purpose/usage of the payment token"
                    type: "string"
                description:
                    type: "string"
                image:
                    description: "Base64 encoded string of an image"
                    type: "string"
                    format: "byte"
                amountIsFlexible:
                    description: "Indicator if shopper/customer is allowed to change amount"
                    type: "boolean"
                taxCategoryCode:
                    type: "string"
                collectTaxAutomatically:
                    type: "boolean"
                includeTaxInPrice:
                    type: "boolean"
                allowPromotionCodes:
                    type: "boolean"
                savePaymentDetails:
                    type: "boolean"
                requireCustomerPhoneNumber:
                    type: "boolean"
                requireCustomerBillingAddress:
                    type: "boolean"
                requireCustomerShippingAddress:
                    type: "boolean"
                payButtonText:
                    type: "string"
                    enum:
                        - "Pay"
                        - "Donate"
                        - "Book"
    parameters:
        SessionToken:
            name: "sessionToken"
            in: "header"
            description: "Synap's session token"
            required: true
            schema:
                type: "string"
                example: "SessionToken"
    requestBodies:
        UserAccessRightsRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            user:
                                type: "object"
                                properties:
                                    name:
                                        type: "string"
                            accessRightObject:
                                $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            accessRightActions:
                                $ref: "#/components/schemas/AccessRightActions"
        TeamAccessRightsRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            team:
                                type: "object"
                                properties:
                                    name:
                                        type: "string"
                            accessRightObject:
                                $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            accessRightActions:
                                $ref: "#/components/schemas/AccessRightActions"
        OrganizationAccessRightsRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            organization:
                                type: "object"
                                properties:
                                    name:
                                        type: "string"
                            accessRightObject:
                                $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            accessRightActions:
                                $ref: "#/components/schemas/AccessRightActions"
        PaymentRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            merchant:
                                type: "object"
                                properties:
                                    identifier:
                                        type: "string"
                                        minLength: 1
                                required:
                                    - identifier
                            payment:
                                type: "object"
                                properties:
                                    amount:
                                        description: "The payment's value"
                                        type: "number"
                                        minimum: 0
                                        example: 1.23
                                    currencyCode:
                                        description: "The payment's currency in ISO numeric code"
                                        type: "integer"
                                        format: "int32"
                                        minimum: 0
                                        example: 840
                                    referenceNumber:
                                        description: "Merchant's unique reference number for this payment"
                                        type: "string"
                                    purposeOfPayment:
                                        description: "The summary of the payment"
                                        type: "string"
                                    description:
                                        description: "More details about the payment"
                                        type: "string"
                                required:
                                    - amount
                                    - currencyCode
                            paymentToken:
                                type: "object"
                                properties:
                                    identifier:
                                        type: "string"
                            paymentMethod:
                                type: "object"
                                properties:
                                    type:
                                        description: "unique payment method code from 'GetPaymentMethod' response"
                                        type: "string"
                            device:
                                type: "object"
                                properties:
                                    type:
                                        description: "The platform of the shopper's device"
                                        type: "string"
                                        enum:
                                            - "web"
                                            - "ios"
                                            - "android"
                                required:
                                    - type
                            paymentInstrument:
                                type: "object"
                                properties:
                                    type:
                                        type: "string"
                                        enum:
                                            - "card"
                                    number:
                                        type: "string"
                                    cardVerificationValue:
                                        type: "integer"
                                        format: "int32"
                                        minimum: 1
                                        maximum: 9999
                                    expiryDate:
                                        description: "expiry date shall be presented as 'YYMM'"
                                        type: "integer"
                                        format: "int32"
                                        minimum: 1
                                        maximum: 9999
                                    savePaymentDetails:
                                        description: "to save this payment instrument details onto customer profile"
                                        type: "boolean"
                            customer:
                                type: "object"
                                properties:
                                    identifier:
                                        description: "System assigned identifier for the shopper"
                                        type: "string"
                                    email:
                                        description: "Shopper's email addresses to be used for identifying the shopper record"
                                        type: "array"
                                        items:
                                            $ref: "#/components/schemas/ContactAddressObject"
                                    mobile:
                                        description: "Shopper's mobile number to be used for identifying the shopper record"
                                        type: "array"
                                        items:
                                            $ref: "#/components/schemas/ContactAddressObject"
                                    locale:
                                        description: "Shopper's preferred language and country code"
                                        type: "string"
                                        example: "en-US"
                                    countryCode:
                                        description: "Shopper's ISO numeric country code"
                                        type: "integer"
                                        format: "int32"
                                        minimum: 0
                                        example: 840
                            billingAddress:
                                type: "object"
                                properties:
                                    payerName:
                                        description: "The name of the payer or name primted on card"
                                        type: "string"
                                    countryName:
                                        description: "Country's name"
                                        type: "string"
                                    address:
                                        description: "The address"
                                        type: "string"
                                    city:
                                        type: "string"
                                    stateProvince:
                                        type: "string"
                                    postalCode:
                                        type: "string"
                            returnURL:
                                description: "URL where the shopper will be taken back to after payment processing"
                                type: "string"
    responses:
        ResultOnlyResponse:
            description: "Receive only result object on response"
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            result:
                                $ref: "#/components/schemas/ResponseResult"
        GetAccessRightsResponse:
            description: "Returned list of user's access rights"
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            result:
                                $ref: "#/components/schemas/ResponseResult"
                            accessRights:
                                type: "array"
                                items:
                                    type: "object"
                                    properties:
                                        accessRightObject:
                                            type: "object"
                                            properties:
                                                name:
                                                    type: "string"
                                        accessRightActions:
                                            $ref: "#/components/schemas/AccessRightActions"
        PaymentResponse:
            description: "Receive payment's result object and/or action on response"
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            result:
                                $ref: "#/components/schemas/ResponseResult"
                            payment:
                                type: "object"
                                properties:
                                    switchSequence:
                                        type: "string"
                            action:
                                type: "object"
                                properties:
                                    type:
                                        type: "string"
                                        enum:
                                            - "redirect"
                                    url:
                                        type: "object"
                                        properties:
                                            address:
                                                type: "string"
                                            method:
                                                type: "string"
                        required:
                            - result
    securitySchemes:
        synapSessionToken:
            type: "apiKey"
            description: "Synap's session token is required for all commands except 'Login'"
            name: x-synap-sessionToken
            in: header
security:
    -
        synapSessionToken: []
paths:
    /Echo:
        summary: "Ping the server"
        post:
            operationId: "Echo"
            tags:
                -  "System"
            summary: "Echo back request body"
            security: []
            requestBody:
                description: "content to be echoed back"
                content:
                    application/json:
                        schema:
                            anyOf:
                                - type: "array"
                                - type: "boolean"
                                - type: "number"
                                - type: "object"
                                - type: "string"
            responses:
                200:
                    description: "Echo back request body"
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - type: "array"
                                    - type: "boolean"
                                    - type: "number"
                                    - type: "object"
                                    - type: "string"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/Logout:
        summary: "User logout or sign out"
        post:
            tags:
                -  "Authentication"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/Login:
        summary: "User login or sign in"
        post:
            security: []
            tags:
                -  "Authentication"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                        password:
                                            type: "string"
                                            minLength: 1
            responses:
                200:
                    description: "Returned a session token and related data"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    sessionToken:
                                        type: "string"
                                        minLength: 1
                                    user:
                                        type: "object"
                                        properties:
                                            inactivityTimeout:
                                                type: "number"
                                            name:
                                                type: "string"
                                            preferName:
                                                type: "string"
                                            lastLogin:
                                                type: "string"
                                                format: "date-time"
                                    password:
                                        type: "object"
                                        properties:
                                            minimumLength:
                                                type: "number"
                                            validationChecks:
                                                type: "object"
                                                properties:
                                                    minimumLengthCheck:
                                                        type: "boolean"
                                                        description: "Validate against password.minimumLength"
                                                    alphaCheck:
                                                        type: "boolean"
                                                        description: "Must contain at least one alphabet"
                                                    upperCaseCheck:
                                                        type: "boolean"
                                                        description: "Must contain at least one upper case letter"
                                                    lowerCaseCheck:
                                                        type: "boolean"
                                                        description: "Must contain at least one lower case letter"
                                                    digitCheck:
                                                        type: "boolean"
                                                        description: "Must contain at least one digit"
                                                    specialCharacterCheck:
                                                        type: "boolean"
                                                        description: "Must contain at least one special char (not an alphabet, not a digit)"
                                                    usernameStrippedCheck:
                                                        type: "boolean"
                                                        description: "The password cannot contain the user name (in this case the user name and password are stripped of all non-alphabet as well as email suffix before a match is attempted)"
                                                    usernameCheck:
                                                        type: "boolean"
                                                        description: "The password cannot contain the user name (in this the user name is not stripped of non-alphabet and the email suffix)"
                                    organization:
                                        type: "object"
                                        properties:
                                            name:
                                                type: "string"
                                            fullname:
                                                type: "string"
                                                description: "organization name to be used for display"
                                    merchant:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                    userContacts:
                                        type: "object"
                                        properties:
                                            mobile:
                                                $ref: "#/components/schemas/UserContactRecords"
                                            email:
                                                $ref: "#/components/schemas/UserContactRecords"
                                            landline:
                                                $ref: "#/components/schemas/UserContactRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ContactShortList:
        summary: "Retrieve list of econtact for an user"
        post:
            security: []
            tags:
                -  "Authentication"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
            responses:
                200:
                    description: "Returned a list of user's econtact"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    userContacts:
                                        type: "object"
                                        properties:
                                            mobile:
                                                $ref: "#/components/schemas/UserContactRecords"
                                            email:
                                                $ref: "#/components/schemas/UserContactRecords"
                                            landline:
                                                $ref: "#/components/schemas/UserContactRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ChangePassword:
        summary: "Change user's existing password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                        password:
                                            type: "string"
                                            minLength: 1
                                        newPassword:
                                            type: "string"
                                            minLength: 1
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RequestToResetPassword:
        summary: "Request to reset user's existing password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                location:
                                    type: "object"
                                    properties:
                                        ipAddress:
                                            type: "string"
                                        currentTimestamp:
                                            type: "string"
                                            format: "date-time"
                                application:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                userContact:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
            responses:
                200:
                    description: "Returned an URL for user to reset password"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    password:
                                        type: "object"
                                        properties:
                                            resetURL:
                                                type: "string"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/VerifyResetPasswordToken:
        summary: "Verify security token for reset password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                password:
                                    type: "object"
                                    properties:
                                        resetToken:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - resetToken
                            required:
                                - password
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ResetPassword:
        summary: "Reset user's reset password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        newPassword:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - newPassword
                                password:
                                    type: "object"
                                    properties:
                                        resetToken:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - resetToken
                                location:
                                    type: "object"
                                    properties:
                                        ipAddress:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - ipAddress
                            required:
                                - user
                                - password
                                - location
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/CheckUserAccessRights:
        summary: "Check user's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                accessRight:
                                    type: "object"
                                    properties:
                                        expression:
                                            type: "string"
                                            description: "arbitrary rights expression"
                                            example: "%user(joe) and transact(reversal)"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserAccessRights:
        summary: "Get list of user's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/UserAccessRightsRequestBody"
            responses:
                200:
                    $ref: "#/components/responses/GetAccessRightsResponse"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetTeamAccessRights:
        summary: "Get list of team's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/TeamAccessRightsRequestBody"
            responses:
                200:
                    $ref: "#/components/responses/GetAccessRightsResponse"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetOrganizationAccessRights:
        summary: "Get list of organization's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/OrganizationAccessRightsRequestBody"
            responses:
                200:
                    $ref: "#/components/responses/GetAccessRightsResponse"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GrantUserAccessRights:
        summary: "Grant user's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/UserAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GrantTeamAccessRights:
        summary: "Grant team's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/TeamAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GrantOrganizationAccessRights:
        summary: "Grant organization's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/OrganizationAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RevokeUserAccessRights:
        summary: "Revoke user's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/UserAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RevokeTeamAccessRights:
        summary: "Revoke team's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/TeamAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RevokeOrganizationAccessRights:
        summary: "Revoke organization's access rights"
        post:
            tags:
                -  "AccessRights"
            requestBody:
                $ref: "#/components/requestBodies/OrganizationAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUser:
        summary: "Get user's details"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    users:
                                        $ref: "#/components/schemas/UserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchUser:
        summary: "Fetch more user's details with cursor"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    users:
                                        $ref: "#/components/schemas/UserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewUser:
        summary: "Create a new user's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                policy:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            description: "default team of an user"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        preferName:
                                            type: "string"
                                        inactivityTimeout:
                                            type: "integer"
                                            format: "int32"
                                        maximumSessions:
                                            type: "integer"
                                            format: "int32"
                                        newPassword:
                                            type: "string"
                                        oneTimePassword:
                                            type: "string"
                                        firstTimePassword:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateUser:
        summary: "Update an existing user's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                policy:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            description: "default team of an user"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        preferName:
                                            type: "string"
                                        inactivityTimeout:
                                            type: "integer"
                                            format: "int32"
                                        maximumSessions:
                                            type: "integer"
                                            format: "int32"
                                        recordStatus:
                                            $ref: "#/components/schemas/RecordStatus"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteUser:
        summary: "Delete an existing user's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetCurrency:
        summary: "Get list of currencies"
        post:
            security: []
            tags:
                -  "Countries & Currencies"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                currency:
                                    type: "object"
                                    properties:
                                        isoAlphaCode:
                                            type: "string"
                                        isoNumericCode:
                                            type: "number"
            responses:
                200:
                    description: "Returned list of currency records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    currencies:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                currency:
                                                    $ref: "#/components/schemas/CurrencyRecord"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetCountry:
        summary: "Get list of countries"
        post:
            security: []
            tags:
                -  "Countries & Currencies"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                country:
                                    type: "object"
                                    properties:
                                        isoAlpha2Code:
                                            type: "string"
                                        isoAlpha3Code:
                                            type: "string"
                                        isoNumericCode:
                                            type: "number"
            responses:
                200:
                    description: "Returned list of country records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    currencies:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                country:
                                                    $ref: "#/components/schemas/CountryRecord"
                                                currency:
                                                    $ref: "#/components/schemas/CurrencyRecord"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPayment:
        summary: "Get list of payments"
        post:
            tags:
                -  "Payment History"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                searchText:
                                    type: "string"
                                searchFilters:
                                    type: "object"
                                    properties:
                                        localDate:
                                            type: "object"
                                            properties:
                                                operator:
                                                    type: "string"
                                                    enum:
                                                        - "between"
                                                        - "="
                                                        - ">"
                                                        - "<"
                                                        - ">="
                                                        - "<="
                                                        - "<>"
                                                value:
                                                    type: "string"
                                                    format: "date"
                                                endValue:
                                                    type: "string"
                                                    format: "date"
                                        status:
                                            type: "object"
                                            properties:
                                                operator:
                                                    type: "string"
                                                    enum:
                                                        - "in"
                                                values:
                                                    type: "array"
                                                    items:
                                                        type: "string"
                                                        enum:
                                                            - "succeeded"
                                                            - "failed"
                                                            - "refunded"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of payment records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    payments:
                                        $ref: "#/components/schemas/PaymentRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchPayment:
        summary: "Fetch more payment records with cursor"
        post:
            tags:
                -  "Payment History"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of payment records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    payments:
                                        $ref: "#/components/schemas/PaymentRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentWithSwitchSequence:
        summary: "Get payment"
        post:
            tags:
                -  "Payment History"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
            responses:
                200:
                    description: "Returned list of payment records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    payments:
                                        $ref: "#/components/schemas/PaymentRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentToken:
        summary: "Get payment token"
        post:
            tags:
                -  "Payment Token [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            oneOf:
                              - type: "object"
                                properties:
                                    merchant:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                        required:
                                            - identifier
                              - type: "object"
                                properties:
                                    paymentToken:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                        required:
                                            - identifier
            responses:
                default:
                    description: "Receive result object and payment tokens on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentTokens:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                paymentToken:
                                                    allOf:
                                                        - $ref: "#/components/schemas/RecordStatusObject"
                                                        - $ref: "#/components/schemas/IdentifierObject"
                                                        - $ref: "#/components/schemas/PaymentTokenRecord"
                                                        - required:
                                                            - recordStatus
                                                            - identifier
                                                            - name
                                                            - amount
                                                            - currencyCode
                                                            - amountIsFlexible
                                                url:
                                                    type: "object"
                                                    properties:
                                                        address:
                                                            type: "string"
                                                    required:
                                                        - address
    /command/NewPaymentToken:
        summary: "Create a new payment token"
        post:
            tags:
                -  "Payment Token [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                paymentToken:
                                    allOf:
                                        - $ref: "#/components/schemas/PaymentTokenRecord"
                                        - required:
                                            - name
                                            - amount
                                            - currencyCode
                                            - amountIsFlexible
                            required:
                                - merchant
                                - paymentToken
            responses:
                default:
                    description: "Receive result object and payment token on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentToken:
                                        allOf:
                                            - $ref: "#/components/schemas/IdentifierObject"
                                            - required:
                                                - identifier
                                    url:
                                        type: "object"
                                        properties:
                                            address:
                                                type: "string"
                                        required:
                                            - address
    /command/UpdatePaymentToken:
        summary: "Update a new payment token"
        post:
            tags:
                -  "Payment Token [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentToken:
                                    allOf:
                                        - $ref: "#/components/schemas/RecordStatusObject"
                                        - $ref: "#/components/schemas/IdentifierObject"
                                        - $ref: "#/components/schemas/PaymentTokenRecord"
                                        - required:
                                            - identifier
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeletePaymentToken:
        summary: "Delete an existing payment token"
        post:
            tags:
                -  "Payment Token [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentToken:
                                    allOf:
                                        - $ref: "#/components/schemas/IdentifierObject"
                                        - required:
                                            - identifier
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentMethod:
        summary: "Get list of payment method"
        post:
            tags:
                -  "Payment Method [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                payment:
                                    type: "object"
                                    properties:
                                        amount:
                                            description: "The payment's value"
                                            type: "number"
                                            example: 1.23
                                        currencyCode:
                                            description: "The payment's currency in ISO numeric code"
                                            type: "integer"
                                            format: "int32"
                                            example: 840
                                        channel:
                                            description: "The platform of the shopper's device"
                                            type: "string"
                                            enum:
                                                - "web"
                                                - "ios"
                                                - "android"
                                    required:
                                        - amount
                                        - currencyCode
                                        - channel
                                customer:
                                    type: "object"
                                    properties:
                                        locale:
                                            description: "Shopper's preferred language and country code"
                                            type: "string"
                                            example: "en-US"
                                        countryCode:
                                            description: "Shopper's ISO numeric country code"
                                            type: "number"
                                            example: 840
                            required:
                                - merchant
            responses:
                default:
                    description: "Receive result object and/or payment methods on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentMethods:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                paymentMethod:
                                                    type: "object"
                                                    properties:
                                                        name:
                                                            description: "name of the payment method to be presented on screen"
                                                            type: "string"
                                                        type:
                                                            description: "unique payment method code to be included in 'Pay' command"
                                                            type: "string"
    /command/Pay:
        summary: "Make a payment"
        post:
            tags:
                -  "Payment"
            requestBody:
                $ref: "#/components/requestBodies/PaymentRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/PaymentResponse"
    /command/AuthorizePayment:
        summary: "Initiate a payment authorization to withhold the funds to be captured later"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                $ref: "#/components/requestBodies/PaymentRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/PaymentResponse"
    /command/CapturePayment:
        summary: "Capture payment that hold separately"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
                                        amount:
                                            description: "The payment's value"
                                            type: "number"
                                            minimum: 0
                                            example: 1.23
                                    required:
                                        - switchSequence
                                        - amount
            responses:
                default:
                    description: "Receive capture's result object on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
    /command/RefundPayment:
        summary: "Refund of a payment"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
                                refund:
                                    type: "object"
                                    properties:
                                        amount:
                                            type: "number"
                                        reason:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/SendPaymentReceipt:
        summary: "Send a payment receipt"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
                                paymentReceipt:
                                    type: "object"
                                    properties:
                                        sendTo:
                                            type: "object"
                                            properties:
                                                emails:
                                                    type: "array"
                                                    items:
                                                        type: "object"
                                                        properties:
                                                            email:
                                                                $ref: "#/components/schemas/ContactAddressObject"
                                                mobiles:
                                                    type: "array"
                                                    items:
                                                        type: "object"
                                                        properties:
                                                            mobile:
                                                                $ref: "#/components/schemas/ContactAddressObject"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DestroyCursor:
        summary: "Destroy an existing cursor"
        post:
            tags:
                -  "Cursor"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
