
---
openapi: "3.0.0"
info:  # (MANDATORY)
    title: "SYNAP API"
    version: "0.0.1"  # major.minor.patch
    description: "SYNAP's API specification"
    contact:
        name: "Cranium Ventures Pte Ltd"
        url:  "https://www.craniumventures.com"
        email: "info@craniumventures.com"
servers:
    -
        url: "https://sandbox01.craniumventures.com/synap/dev"
        description: "Sandbox Environment"
components:
    schemas:
        CursorRecordCountOnRequest:
            type: "object"
            properties:
                creation:
                    description: "should a cursor be created?"
                    type: "string"
                    enum:
                        - always
                        - auto
                        - never
                recordOffset:
                    description: "offset of the record to retrieve"
                    type: "integer"
                    format: "int32"
                    minimum: 0
                    example: 0
                recordCount:
                    description: "number of records to be retrieved"
                    type: "integer"
                    format: "int32"
                    minimum: 1
                    example: 1
            required:
                - recordOffset
        CursorIdentifier:
            description: "identifier used to uniquely identify a cursor created by the system"
            type: "string"
            minLength: 1
            example: "<cursor_identifier>"
        CursorOnRequest:
            allOf:
                - type: "object"
                  properties:
                    identifier:
                        $ref: "#/components/schemas/CursorIdentifier"
                  required:
                    - identifier
                - $ref: "#/components/schemas/CursorRecordCountOnRequest"
        CursorOnResponse:
            type: "object"
            properties:
                identifier:
                        $ref: "#/components/schemas/CursorIdentifier"
                totalRecords:
                    description: "total number of records a cursor holds"
                    type: "number"
                    example: 10
            required:
                - identifier
                - totalRecords
        CursorRecordIdentifierOnResponse:
            type: "object"
            properties:
                recordIdentifier:
                    description: "record's identifier of a given cursor's context"
                    type: "string"
        RecordStatus:
            type: "object"
            properties:
                recordStatus:
                    description: "The current status/state of a record"
                    type: "string"
                    enum:
                        - active
                        - inactive
                        - suspense
                        - pendingApproval
                        - disable
                        - locked
                        - deleted
                        - noPassword
                    example: "active"
        CreateDateTime:
            type: "object"
            properties:
                createDateTime:
                    description: "date & time of create record"
                    type: "string"
                    format: "date-time"
        RecordDateTime:
            type: "object"
            properties:
                recordDateTime:
                    description: "date & time of update record"
                    type: "string"
                    format: "date-time"
        EntityIdentifier:
            type: "object"
            properties:
                identifier:
                    description: "unique identity of an entity in a given scope"
                    type: "string"
                    minLength: 1
                    example: "<identifier_of_an_entity>"
            required:
                - identifier
        MerchantIdentifier:
            type: "object"
            properties:
                identifier:
                    description: "merchant's unique identity"
                    type: "string"
                    minLength: 1
                    example: "110000000000053"
            required:
                - identifier
        BusinessPersonName:
            type: "object"
            properties:
                name:
                    description: "The name of a person or business"
                    type: "string"
                    example: "John Smith"
        MailingAddressType:
            type: "object"
            properties:
                type:
                    description: "the type of mailing address"
                    type: "string"
                    enum:
                        - "correspondence"
                        - "billing"
                        - "shipping"
            required:
                - type
        MailingAddress:
            type: "object"
            properties:
                countryCode:
                    description: "country code of mailing address"
                    $ref: "#/components/schemas/CountryCode"
                addressLine1:
                    description: "first line of mailing address"
                    type: "string"
                    minLength: 1
                    example: "unit# and building name"
                addressLine2:
                    description: "second line of mailing address"
                    type: "string"
                    minLength: 1
                    example: "street name"
                addressLine3:
                    description: "third line of mailing address"
                    type: "string"
                    minLength: 1
                    example: "name of town or village"
                city:
                    description: "city name of mailing address"
                    type: "string"
                    minLength: 1
                    example: "Middle City"
                provinceState:
                    description: "province or state of mailing address"
                    type: "string"
                    minLength: 1
                    example: "Big State"
                postalCode:
                    description: "postal code of mailing address"
                    type: "string"
                    minLength: 1
                    example: "123456"
        ContactAddress:
            type: "object"
            properties:
                address:
                    description: "the plain text address for this contact; it will be empty if the actor is not the target user; this element holds the address which has been parsed by the system"
                    type: "string"
        EmailAddressAttribute:
            description: "The plain text email address"
            type: "string"
            format: "email"
            example: "john.smith@example.com"
        EmailAddress:
            type: "object"
            properties:
                emailAddress:
                    $ref: "#/components/schemas/EmailAddressAttribute"
        CCEmailAddress:
            type: "object"
            properties:
                ccEmailAddress:
                    $ref: "#/components/schemas/EmailAddressAttribute"
        PhoneNumberAttribute:
            description: "The plain text of formatted phone number"
            type: "string"
            example: "+1 (555) 555-1234"
        PhoneNumber:
            type: "object"
            properties:
                phoneNumber:
                    $ref: "#/components/schemas/PhoneNumberAttribute"
        MobileNumber:
            type: "object"
            properties:
                mobileNumber:
                    $ref: "#/components/schemas/PhoneNumberAttribute"
        UserContactType:
            type: "object"
            properties:
                type:
                    description: "The type of a contact"
                    type: "string"
                    enum:
                        - "email"
                        - "mobile"
                        - "landline"
                        - "url"
        UserContact:
            allOf:
                - $ref: "#/components/schemas/RecordStatus"
                - $ref: "#/components/schemas/ContactAddress"
                - type: "object"
                  properties:
                    class:
                        type: "number"
                        description: "the contact class"
                    identifier:
                        type: "string"
                        description: "a system generated key which can be used to retrieve this contact record"
                    maskedAddress:
                        type: "string"
                        description: "the contact address masked for security purposes; an application must only display the masked address even if a plain text address is present in the response"
                    originalAddress:
                        type: "string"
                        description: "the plain text address for this contact; it will be empty if the actor is not the target user; this element holds the address string as entered by the user when the record was created or updated"
                    flags:
                        $ref: "#/components/schemas/UserContactFlags"
        UserContactFlags:
            type: "object"
            properties:
                verified:
                    type: "boolean"
                    description: "the record has been verified"
                primary:
                    type: "boolean"
                    description: "this is a primary address"
                default:
                    type: "boolean"
                    description: "this is a default address"
                phone:
                    type: "boolean"
                    description: "this is a phone type record"
                messageCapable:
                    type: "boolean"
                    description: "this type of address is capable of receiving notification messages"
                url:
                    type: "boolean"
                    description: "this is a social media address record"
                notification:
                    type: "boolean"
                    description: "this record can receive account notification messages from the system"
                recovery:
                    type: "boolean"
                    description: "this record can be used for password and account recovery operations"
        UserContactRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    user:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                        required:
                            - name
                    mobiles:
                        $ref: "#/components/schemas/UserMobileContactRecords"
                    emails:
                        $ref: "#/components/schemas/UserEmailContactRecords"
                    landlines:
                        $ref: "#/components/schemas/UserLandlineContactRecords"
                required:
                    - user
        UserMobileContactRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    mobile:
                        $ref: "#/components/schemas/UserContact"
                required:
                    - mobile
        UserEmailContactRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    email:
                        $ref: "#/components/schemas/UserContact"
                required:
                    - email
        UserLandlineContactRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    landline:
                        $ref: "#/components/schemas/UserContact"
                required:
                    - landline
        UserRecord:
            allOf:
                - $ref: "#/components/schemas/RecordStatus"
                - $ref: "#/components/schemas/EmailAddress"
                - $ref: "#/components/schemas/MobileNumber"
                - $ref: "#/components/schemas/CreateDateTime"
                - $ref: "#/components/schemas/RecordDateTime"
                - type: "object"
                  properties:
                    rowId:
                        type: "number"
                    name:
                        type: "string"
                    identifier:
                        type: "string"
                    externalIdentifier:
                        type: "string"
                    groupIdentifier:
                        type: "string"
                    policyIdentifier:
                        type: "string"
                    organizationIdentifier:
                        type: "string"
                    multiFactorIdentifier:
                        type: "string"
                    multiFactorName:
                        type: "string"
                    lastFailedAuthenticateDateTime:
                        type: "string"
                        format: "date-time"
                    lastLoginLocation:
                        type: "string"
                    lastFailedLoginLocation:
                        type: "string"
                    lockoutPeriod:
                        type: "string"
                    failedAuthenticateAttemptCount:
                        type: "number"
                    sessionExceededPolicy:
                        type: "number"
                    loginShell:
                        type: "string"
                    loginShellArguments:
                        type: "string"
                    serverLoginScriptPath:
                        type: "string"
                    homeDirectory:
                        type: "string"
                    notificationOptInMap:
                        type: "string"
                    restricted:
                        type: "string"
                    preferName:
                        type: "string"
        UserRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    user:
                        $ref: "#/components/schemas/UserRecord"
        UserProfile:
            allOf:
                - $ref: "#/components/schemas/CreateDateTime"
                - type: "object"
                  properties:
                    nationalRegistrationIdentityCard:
                        type: "string"
                    gender:
                        type: "string"
                        enum:
                            - "male"
                            - "female"
                    nationality:
                        type: "string"
                    race:
                        type: "string"
                    birthdate:
                        type: "string"
                        format: "date"
                    salutationPrefix:
                        type: "string"
                    salutationSuffix:
                        type: "string"
                    firstName:
                        type: "string"
                    middleName:
                        type: "string"
                    lastName:
                        type: "string"
                    otherName:
                        type: "string"
        TeamRecord:
            allOf:
                - $ref: "#/components/schemas/RecordStatus"
                - $ref: "#/components/schemas/EmailAddress"
                - $ref: "#/components/schemas/MobileNumber"
                - $ref: "#/components/schemas/CreateDateTime"
                - $ref: "#/components/schemas/RecordDateTime"
                - type: "object"
                  properties:
                    rowId:
                        type: "number"
                    name:
                        type: "string"
                    identifier:
                        type: "string"
                    restricted:
                        type: "string"
        TeamRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    teams:
                        $ref: "#/components/schemas/TeamRecord"
        TeamUserRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    team:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                    users:
                        type: "array"
                        items:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
        ResponseResult:
            type: "object"
            properties:
                code:
                    type: "string"
                    description: "success or error code"
                    example: "ErrorCode"
                    enum:
                        - Success
                        - Fail
                        - InvalidSessionToken
                        - InvalidRequestValues
                        - ServerTimeout
                        - SystemError
                        - InvalidProvider
                reason:
                    type: "string"
                    description: "reason for error occur"
                    example: "ErrorReason"
            required:
                - code
        AccessRightObjectNameOnRequest:
            type: "object"
            properties:
                name:
                    type: "string"
                    description: "name of the object which the rights are processed"
                    example: "frog"
            required:
                - name
        AccessRightActions:
            type: "object"
            description: "one or more actions"
            properties:
                <replace_with_action_name>:
                    type: "boolean"
                    description: "name of an action; values are ignored during retrieval however 'true' would mean an action to be granted and 'false' would mean an action to be revoked"
        AccessRightObjectRecord:
            allOf:
                - $ref: "#/components/schemas/RecordStatus"
                - $ref: "#/components/schemas/CreateDateTime"
                - $ref: "#/components/schemas/RecordDateTime"
                - type: "object"
                  properties:
                    rowId:
                        type: "number"
                    name:
                        type: "string"
                    identifier:
                        type: "string"
                    class:
                        type: "string"
                    restricted:
                        type: "string"
        AccessRightObjectRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    accessRightObject:
                        $ref: "#/components/schemas/AccessRightObjectRecord"
        AccessRightActionRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    accessRightObject:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                            identifier:
                                type: "string"
                            accessRightActions:
                                description: "The list of access right actions related to an object"
                                type: "object"
        ValidationChecks:
            type: "object"
            properties:
                minimumLengthCheck:
                    type: "boolean"
                    description: "Validate against password.minimumLength"
                alphaCheck:
                    type: "boolean"
                    description: "Must contain at least one alphabet"
                upperCaseCheck:
                    type: "boolean"
                    description: "Must contain at least one upper case letter"
                lowerCaseCheck:
                    type: "boolean"
                    description: "Must contain at least one lower case letter"
                digitCheck:
                    type: "boolean"
                    description: "Must contain at least one digit"
                specialCharacterCheck:
                    type: "boolean"
                    description: "Must contain at least one special char (not an alphabet, not a digit)"
                usernameStrippedCheck:
                    type: "boolean"
                    description: "The password cannot contain the user name (in this case the user name and password are stripped of all non-alphabet as well as email suffix before a match is attempted)"
                usernameCheck:
                    type: "boolean"
                    description: "The password cannot contain the user name (in this the user name is not stripped of non-alphabet and the email suffix)"
        PasswordPolicyName:
            type: "object"
            properties:
                name:
                    description: "The name assigned to this policy"
                    type: "string"
            required:
                - name
        PasswordPolicy:
            allOf:
                - $ref: "#/components/schemas/PasswordPolicyName"
                - type: "object"
                  properties:
                    name:
                        description: "The name assigned to this policy"
                        type: "string"
                    minimumStrength:
                        description: "The minimum strength, as determinted by entropy, which a password must have"
                        type: "integer"
                        format: "int32"
                    minimumLength:
                        description: "The minimum length a password must have. A value of zero implies no minimum required"
                        type: "integer"
                        format: "int32"
                    historySize:
                        description: "The number of past passwords in the password history file. This indicates how many past passwords are checked when a user attempts to change their password. A value of zero means never check against old password."
                        type: "integer"
                        format: "int32"
                    maximumLife:
                        description: "The number of days after which the user must change their password. A value of zero means the user is never required to change their password."
                        type: "integer"
                        format: "int32"
                    maximumFailedAttempts:
                        description: "The maximum consecutive times a password authentication fails after which the user is locked out. A value of zero means to never lock the record."
                        type: "integer"
                        format: "int32"
                    lockoutPeriod:
                        description: "The number of seconds to lockout an account after 'maximumFailedAttempts' consecutive password failures. If this field is zero, then the record is locked until an administrator unlocks the record."
                        type: "integer"
                        format: "int32"
                    resetLife:
                        description: "The number of seconds a temporary password is valid."
                        type: "integer"
                        format: "int32"
                    validationChecks:
                        $ref: "#/components/schemas/ValidationChecks"
                    hashAlgorithm:
                        description: "The value determines which hashing algorithm will be used to hash the plaintext password."
                        type: "string"
                        enum:
                            - "pbkdf2"
                            - "digest"
                            - "bcrypt"
                            - "scrypt"
                            - "encrypt"
                            - "random"
                    hashDigest:
                        description: "The message digest to use with the hash algorithm"
                        type: "string"
                        enum:
                            - "md5"
                            - "sha1"
                            - "sha224"
                            - "sha256"
                            - "sha512"
                            - "ripemd160"
                            - "whirlpool"
                            - "random"
                    hashEncoding:
                        description: "How the final hash is encoded in the database"
                        type: "string"
                        enum:
                            - "ascii"
                            - "crypt"
                            - "binary"
                    hashSaltSize:
                        description: "The size of the salt, in bytes, value to apply to password. Some algorithms fix this value or apply a minimum to size of salt. The system will automatically modify this value if required."
                        type: "integer"
                        format: "int32"
                    hashKeySize:
                        description: "The size of the key to pass to the PBKDF2 function."
                        type: "integer"
                        format: "int32"
                    hashRounds:
                        description: "The number of rounds (iterations) to apply the hash algorithm (default is 131,072). Note that some algorithms require a specific number of rounds or set a minimum or maximum on the allowed rounds. Depending on the choice of algorithm, the system will automatically adjust the rounds. The overall minimum number of rounds is 1000."
                        type: "integer"
                        format: "int32"
                    restricted:
                        description: "The name of the organization to which this policy is restricted."
                        type: "string"
        PasswordPolicyRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    passwordPolicy:
                        allOf:
                            - $ref: "#/components/schemas/RecordStatus"
                            - $ref: "#/components/schemas/RecordDateTime"
                            - $ref: "#/components/schemas/PasswordPolicy"
                            - type: "object"
                              properties:
                                rowId:
                                    type: "number"
                                identifier:
                                    type: "string"
        AuthenticationPolicyName:
            type: "object"
            properties:
                name:
                    description: "The name assigned to this authentication policy"
                    type: "string"
            required:
                - name
        AuthenticationPolicyRecord:
            allOf:
                - $ref: "#/components/schemas/AuthenticationPolicyName"
                - type: "object"
                  properties:
                    externalValidator:
                        type: "string"
                    multiFactorName:
                        type: "string"
                    authenticationFlags:
                        type: "integer"
                        format: "int32"
                    inactivityTimeout:
                        description: "The number of idle seconds before a session is automatically logged off. A value of zero implies no inactivity timeout. A negative value implies that idle timeout will be managed by an external entity such as portal rather than main server."
                        type: "integer"
                        format: "int32"
                    maximumSessions:
                        description: "The maximum number of concurrent sessions this policy allows a user. A value of zero indicates that there is no maximum."
                        type: "integer"
                        format: "int32"
                    sessionExceededPolicy:
                        description: "The policy to use when a user exceeds their allowed maximum session count."
                        type: "string"
                        enum:
                            - "reject"
                            - "makeRoom"
                    restricted:
                        description: "The name of the organization to which this policy is restricted."
                        type: "string"
        AuthenticationPolicyRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    authenticationPolicy:
                        allOf:
                            - $ref: "#/components/schemas/RecordStatus"
                            - $ref: "#/components/schemas/RecordDateTime"
                            - $ref: "#/components/schemas/EntityIdentifier"
                            - $ref: "#/components/schemas/AuthenticationPolicyName"
                            - $ref: "#/components/schemas/AuthenticationPolicyRecord"
                    passwordPolicy:
                        allOf:
                            - $ref: "#/components/schemas/EntityIdentifier"
                            - type: "object"
                              properties:
                                module:
                                    type: "string"
                required:
                    - authenticationPolicy
                    - passwordPolicy
        OrganizationName:
            type: "object"
            properties:
                name:
                    description: "The name assigned to this organization"
                    type: "string"
            required:
                - name
        OrganizationRecord:
            allOf:
                - $ref: "#/components/schemas/OrganizationName"
                - type: "object"
                  properties:
                    externalIdentifier:
                        type: "string"
                    serverLoginScriptPath:
                        type: "string"
                    description:
                        description: "full name of an organization"
                        type: "string"
                    restricted:
                        description: "This indicates if this organization should be marked as restricted (true) or unnrestricted (false). The default is 'false'."
                        type: "boolean"
        OrganizationRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    organization:
                        allOf:
                            - $ref: "#/components/schemas/RecordStatus"
                            - $ref: "#/components/schemas/RecordDateTime"
                            - $ref: "#/components/schemas/EntityIdentifier"
                            - $ref: "#/components/schemas/OrganizationName"
                            - $ref: "#/components/schemas/OrganizationRecord"
                    authenticationPolicy:
                        type: "object"
                        properties:
                            identifier:
                                type: "string"
                        required:
                            - identifier
                    team:
                        type: "object"
                        properties:
                            identifier:
                                type: "string"
                        required:
                            - identifier
                required:
                    - organization
                    - authenticationPolicy
                    - team
        SessionUserRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    sessionUser:
                        type: "object"
                        properties:
                            name:
                                type: "string"
                            identifier:
                                type: "string"
                            nodeIdentifier:
                                type: "string"
                            recordStatus:
                                type: "string"
                            lastActivityDateTime:
                                description: "date & time of last activity"
                                type: "string"
                                format: "date-time"
                            expiryInSeconds:
                                type: "number"
                            activeSessions:
                                type: "number"
        SessionRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    cursor:
                        $ref: "#/components/schemas/CursorRecordIdentifierOnResponse"
                    session:
                        type: "object"
                        properties:
                            number:
                                type: "number"
                            flags:
                                type: "number"
                            loginMethod:
                                type: "string"
                            recordStatus:
                                type: "string"
                            lastActivityDateTime:
                                description: "date & time of last activity"
                                type: "string"
                                format: "date-time"
                            createDateTime:
                                description: "date & time of session was created"
                                type: "string"
                                format: "date-time"
                            location:
                                type: "string"
        CountryRecord:
            type: "object"
            properties:
                name:
                    type: "string"
                isoAlpha2Code:
                    type: "string"
                isoAlpha3Code:
                    type: "string"
                isoNumericCode:
                    type: "number"
        CurrencyRecord:
            type: "object"
            properties:
                name:
                    type: "string"
                isoAlphaCode:
                    type: "string"
                isoNumericCode:
                    type: "number"
                symbol:
                    type: "string"
                minorUnits:
                    type: "number"
                isPrefix:
                    type: "boolean"
        CountryCode:
            description: "ISO numeric country code"
            type: "integer"
            format: "int32"
            minimum: 0
            maximum: 999
            example: 840
        CurrencyCode:
            description: "The currency in ISO numeric code"
            type: "integer"
            format: "int32"
            minimum: 0
            maximum: 999
            example: 840
        PaymentRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    payment:
                        type: "object"
                        properties:
                            recordDateTime:
                                type: "string"
                                format: "date-time"
                            applicationIdentifier:
                                type: "string"
                            messageTypeIdentifier:
                                type: "string"
                            processingCode:
                                type: "string"
                            traceNumber:
                                type: "string"
                            transmissionDateTime:
                                type: "string"
                                format: "date-time"
                            status:
                                type: "string"
                            acquirerInstitution:
                                type: "string"
                            switchSequence:
                                type: "string"
                            amount:
                                type: "number"
                            localTime:
                                type: "string"
                            localDate:
                                type: "string"
                                format: "date-time"
                            retrievalReferenceNumber:
                                type: "string"
                            currencyCode:
                                description: "The payment's currency in ISO numeric code"
                                type: "integer"
                                format: "int32"
                    settlement:
                        type: "object"
                        properties:
                            date:
                                type: "string"
                                format: "date-time"
                            amount:
                                type: "number"
                            rate:
                                type: "number"
                            currencyCode:
                                description: "The settlement's currency in ISO numeric code"
                                type: "integer"
                                format: "int32"
                    paymentInstrument:
                        type: "object"
                        properties:
                            maskedNumber:
                                type: "string"
                            encryptedNumber:
                                type: "string"
                            issuerInstitution:
                                type: "string"
                            countryCode:
                                type: "string"
                            currencyCode:
                                description: "The payment instrument's currency in ISO numeric code"
                                type: "integer"
                                format: "int32"
                            expiry:
                                type: "string"
                    refund:
                        type: "object"
                        properties:
                            amount:
                                type: "number"
                            date:
                                type: "string"
                                format: "date-time"
                    adjustment:
                        type: "object"
                        properties:
                            amount:
                                type: "number"
                            date:
                                type: "string"
                                format: "date-time"
                    merchant:
                        type: "object"
                        properties:
                            identifier:
                                type: "string"
                            categoryCode:
                                type: "string"
                            deviceIdentifier:
                                type: "string"
                            countryCode:
                                type: "string"
                            nameAndLocation:
                                type: "string"
                    customer:
                        type: "object"
                        properties:
                            name:
                                type: "string"
        PaymentTokenRecord:
            type: "object"
            properties:
                amount:
                    description: "The payment amount to be collected"
                    type: "number"
                    minimum: 0
                    example: 10
                minimumAmount:
                    description: "The manimum amount needed"
                    type: "number"
                    minimum: 0
                    exclusiveMinimum: true
                    example: 1
                maximumAmount:
                    description: "The maximum amount allowed"
                    type: "number"
                    minimum: 0
                    exclusiveMinimum: true
                    example: 100
                currencyCode:
                    description: "The amount's currency code"
                    $ref: "#/components/schemas/CountryCode"
                name:
                    description: "The purpose/usage of the payment token"
                    type: "string"
                    minLength: 1
                    example: "Donate For Children"
                description:
                    type: "string"
                    minLength: 1
                    example: "Help us protect children around the world"
                image:
                    description: "Base64 encoded string of an image"
                    type: "string"
                    format: "byte"
                amountIsFlexible:
                    description: "Indicator if shopper/customer is allowed to change amount"
                    type: "boolean"
                    example: true
                taxCategoryCode:
                    description: "Indicator if shopper/customer is allowed to change amount"
                    type: "string"
                    minLength: 1
                    example: "taxCategoryCode01"
                collectTaxAutomatically:
                    description: "Indicator if tax is calculated and collected automatically"
                    type: "boolean"
                    example: true
                includeTaxInPrice:
                    description: "Indicator if tax should be included in pricing"
                    type: "boolean"
                    example: true
                allowPromotionCodes:
                    description: "Indicator if shopper/customer is allowed to enter promotion codes"
                    type: "boolean"
                    example: true
                savePaymentDetails:
                    description: "Indicator if payment details shall be saved"
                    type: "boolean"
                    example: true
                requireCustomerPhoneNumber:
                    description: "Indicator if shopper/customer is required to enter phone number"
                    type: "boolean"
                    example: true
                requireCustomerBillingAddress:
                    description: "Indicator if shopper/customer is required to enter billing address"
                    type: "boolean"
                    example: true
                requireCustomerShippingAddress:
                    description: "Indicator if shopper/customer is required to enter shipping address"
                    type: "boolean"
                    example: true
                payButtonText:
                    description: "Text to be presented on the 'PAY' button"
                    type: "string"
                    enum:
                        - "PAY"
                        - "DONATE"
                        - "BOOK"
        PaymentTokenRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    paymentToken:
                        allOf:
                            - $ref: "#/components/schemas/RecordStatus"
                            - $ref: "#/components/schemas/EntityIdentifier"
                            - $ref: "#/components/schemas/PaymentTokenRecord"
                            - required:
                                - recordStatus
                                - identifier
                                - name
                                - description
                                - amount
                                - amountIsFlexible
                    merchant:
                        type: "object"
                        properties:
                            identifier:
                                type: "string"
                        required:
                            - identifier
                    url:
                        type: "object"
                        properties:
                            path:
                                description: "Full URL path with end point to initiate the payment process"
                                type: "string"
                                format: "uri"
                                example: "https://pay.example.com/paymentToken/payment_token_identifier"
                        required:
                            - path
                required:
                    - paymentToken
                    - url
        BillingAddress:
            allOf:
                - $ref: "#/components/schemas/BusinessPersonName"
                - $ref: "#/components/schemas/EmailAddress"
                - $ref: "#/components/schemas/CCEmailAddress"
                - $ref: "#/components/schemas/PhoneNumber"
                - $ref: "#/components/schemas/MailingAddress"
        ShippingAddress:
            allOf:
                - $ref: "#/components/schemas/BusinessPersonName"
                - $ref: "#/components/schemas/EmailAddress"
                - $ref: "#/components/schemas/PhoneNumber"
                - $ref: "#/components/schemas/MailingAddress"
        Locale:
            description: "One's preferred language and country code"
            type: "string"
            example: "en-US"
        TaxRecord:
            type: "object"
            properties:
                countryCode:
                    $ref: "#/components/schemas/CountryCode"
                type:
                    description: "The type of taxation of a territory of jurisdiction"
                    type: "string"
                    example: "VAT"
                identityNumber:
                    description: "The identity number of taxation for a business"
                    type: "string"
                    example: "<tax_id_number>"
            required:
                - countryCode
                - type
                - identityNumber
        CustomerRecord:
            allOf:
                - $ref: "#/components/schemas/BusinessPersonName"
                - $ref: "#/components/schemas/EmailAddress"
                - $ref: "#/components/schemas/PhoneNumber"
                - type: "object"
                  properties:
                    description:
                        description: "A brief desctiptive text about the customer"
                        type: "string"
                        minLength: 1
                        example: "Help us protect children around the world"
                    currencyCode:
                        $ref: "#/components/schemas/CountryCode"
                    image:
                        description: "Base64 encoded string of an image"
                        type: "string"
                        format: "byte"
                    locale:
                        $ref: "#/components/schemas/Locale"
                    timeZone:
                        type: "string"
                        example: "+08:00"
                    invoicePrefix:
                        description: "The prefix of customer invoice number"
                        type: "string"
                        minLength: 1
                        maxLength: 8
                        example: "SALE_INV"
                    nextInvoiceSequence:
                        description: "The number of next customer invoice"
                        type: "number"
                        minimum: 1
                        maximum: 99999
                        example: 1
                    taxStatus:
                        type: "string"
                        enum:
                            - "taxable"
                            - "exempt"
                            - "reverseCharge"
                    metadata:
                        type: "string"
                    totalNumberOfPayments:
                        description: "total number of payment made since created"
                        type: "number"
                    lastPaymentDate:
                        type: "string"
                        format: "date-time"
                    totalAmountSpent:
                        type: "number"
                    totalAmountRefunded:
                        type: "number"
                    totalAmountDisputeLost:
                        type: "number"
        CustomerRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    customer:
                        allOf:
                            - $ref: "#/components/schemas/EntityIdentifier"
                            - $ref: "#/components/schemas/CustomerRecord"
                    customerPaymentInstrument:
                        allOf:
                            - $ref: "#/components/schemas/EntityIdentifier"
                            - $ref: "#/components/schemas/CustomerPaymentInstrumentRecord"
                    merchant:
                        $ref: "#/components/schemas/MerchantIdentifier"
                    organization:
                        $ref: "#/components/schemas/OrganizationName"
        PaymentInstrumentRecord:
            allOf:
                - type: "object"
                  properties:
                    description:
                        description: "A brief desctiptive text about the payment instrument"
                        type: "string"
                        minLength: 1
                        example: "Help us protect children around the world"
                    currencyCode:
                        $ref: "#/components/schemas/CountryCode"
                    expiryDate:
                        type: "string"
                        format: "date"
                    lastExpiryDate:
                        type: "string"
                        format: "date"
                    branch:
                        type: "string"
                    status:
                        type: "string"
                    lastStatus:
                        type: "string"
                    issuanceSerial:
                        type: "number"
                    issuanceIndex:
                        type: "number"
                    issuanceCount:
                        type: "number"
                    issuanceSequence:
                        type: "number"
                    embossIndicator:
                        type: "string"
                    nextCycleDate:
                        type: "string"
                        format: "date"
                    availableBalanceAmount:
                        type: "number"
                    ledgerBalanceAmount:
                        type: "number"
                    onHoldDebitAmount:
                        type: "number"
                    onHoldCreditAmount:
                        type: "number"
                    totalAmountSpent:
                        type: "number"
                    totalFeeCharged:
                        type: "number"
                    cycleAmountSpent:
                        type: "number"
                    cycleFeeCharged:
                        type: "number"
                    appliedIndicator:
                        type: "string"
                - $ref: "#/components/schemas/paymentInstrument.autoTopup"
        PaymentInstrumentRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    paymentInstrument:
                        allOf:
                            - $ref: "#/components/schemas/RecordStatus"
                            - $ref: "#/components/schemas/CreateDateTime"
                            - $ref: "#/components/schemas/RecordDateTime"
                            - $ref: "#/components/schemas/paymentInstrument.identifier"
                            - $ref: "#/components/schemas/PaymentInstrumentRecord"
                    paymentInstrumentProduct:
                        $ref: "#/components/schemas/paymentInstrumentProduct.identifier"
                    paymentInstrumentFunding:
                        $ref: "#/components/schemas/paymentInstrumentFunding.identifier"
                    user:
                        $ref: "#/components/schemas/user.identifier"
                    merchant:
                        $ref: "#/components/schemas/merchant.identifier"
                    organization:
                        $ref: "#/components/schemas/organization.identifier"
        PaymentInstrumentProductRecord:
            type: "object"
            properties:
                name:
                    description: "An unique name of the payment instrument's product"
                    type: "string"
                    minLength: 1
                    example: "USD_wallet"
                type:
                    description: "Type of the payment instrument's product"
                    type: "string"
                    minLength: 1
                    example: "wallet"
                category:
                    type: "string"
                    example: "default"
                issuancePrefix:
                    type: "string"
                    example: "586070"
                currencyCode:
                    $ref: "#/components/schemas/CountryCode"
                startSequence:
                    type: "number"
                    example: 1
                expiryExpectancy:
                    type: "string"
                    example: "none"
                    enum:
                        - "none"
                        - "day"
                        - "month"
                        - "year"
                expiryLife:
                    type: "number"
                    example: 0
                cyclePeriod:
                    type: "number"
                    example: 0
                appliedIndicator:
                    type: "string"
                minimumScore:
                    type: "number"
                    example: 0
                kycDefaultMaximumBalance:
                    type: "number"
                    example: 100
                kycLevel1Score:
                    type: "number"
                kycLevel1MaximumBalance:
                    type: "number"
                kycLevel2Score:
                    type: "number"
                kycLevel2MaximumBalance:
                    type: "number"
                kycLevel3Score:
                    type: "number"
                kycLevel3MaximumBalance:
                    type: "number"
                kycLevel4Score:
                    type: "number"
                kycLevel4MaximumBalance:
                    type: "number"
                kycLevel5Score:
                    type: "number"
                kycLevel5MaximumBalance:
                    type: "number"
                productAmount1:
                    type: "number"
                productAmount2:
                    type: "number"
                productAmount3:
                    type: "number"
                productAmount4:
                    type: "number"
                productAmount5:
                    type: "number"
            required:
                - name
                - type
        PaymentInstrumentProductRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    paymentInstrumentProduct:
                        allOf:
                            - $ref: "#/components/schemas/RecordStatus"
                            - $ref: "#/components/schemas/CreateDateTime"
                            - $ref: "#/components/schemas/RecordDateTime"
                            - $ref: "#/components/schemas/paymentInstrumentProduct.identifier"
                            - $ref: "#/components/schemas/PaymentInstrumentProductRecord"
                    paymentInstrumentNumber:
                        $ref: "#/components/schemas/paymentInstrumentNumber.name"
                    paymentInstrumentSerial:
                        $ref: "#/components/schemas/paymentInstrumentSerial.name"
                    organization:
                        $ref: "#/components/schemas/organization.identifier"
        CustomerPaymentInstrumentRecord:
            type: "object"
            properties:
                description:
                    description: "payment instrument's name"
                    type: "string"
                    example: "John Smith"
                number:
                    description: "payment instrument's number"
                    type: "string"
                maskedNumber:
                    description: "masked payment instrument's number"
                    type: "string"
                expiryDate:
                    type: "string"
                    format: "date"
                type:
                    description: "payment instrument type"
                    type: "string"
                    example: "CREDIT_CARD"
                brand:
                    description: "payment instrument's brand"
                    type: "string"
                    example: "MASTERCARD"
                issuer:
                    description: "name of issuing bank"
                    type: "string"
                issuingCountryCode:
                    type: "number"
                    format: "int32"
                cardVerificationValue:
                    type: "string"
                cardVerified:
                    type: "boolean"
        CustomerPaymentInstrumentRecords:
            type: "array"
            items:
                type: "object"
                properties:
                    customerPaymentInstrument:
                        $ref: "#/components/schemas/CustomerPaymentInstrumentRecord"
                    customer:
                        $ref: "#/components/schemas/customer.identifier"
        user.name:
            type: "object"
            properties:
                name:
                    description: "The user's login name"
                    type: "string"
                    example: "john.smith"
            required:
                - name
        user.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify an user"
                    type: "string"
                    example: "1"
            required:
                - identifier
        merchant.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify a merchant"
                    type: "string"
                    example: "1"
            required:
                - identifier
        organization.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify an organization"
                    type: "string"
                    example: "1"
            required:
                - identifier
        organization.name:
            type: "object"
            properties:
                name:
                    description: "An unique name to identify an organization"
                    type: "string"
                    example: "john_smith_company"
            required:
                - name
        paymentInstrumentNumber.name:
            type: "object"
            properties:
                name:
                    description: "An unique name to identify an payment instrument's number"
                    type: "string"
                    example: "unique_name"
            required:
                - name
        paymentInstrumentSerial.name:
            type: "object"
            properties:
                name:
                    description: "An unique name to identify an payment instrument's serial"
                    type: "string"
                    example: "unique_name"
            required:
                - name
        paymentInstrumentProduct.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify an payment instrument product"
                    type: "string"
                    example: "1"
            required:
                - identifier
        paymentInstrumentFunding.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify an payment instrument funding source"
                    type: "string"
                    example: "1"
            required:
                - identifier
        paymentInstrument.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify an payment instrument"
                    type: "string"
                    example: "1"
            required:
                - identifier
        paymentInstrument.autoTopup:
            type: "object"
            properties:
                autoTopupMode:
                    description: "This indicates how an instrument should be topup"
                    type: "string"
                    enum:
                        - "disable"
                        - "auto"
                        - "transactionAmountOnly"
                autoTopupAmount:
                    type: "number"
                autoTopupThresholdBalance:
                    type: "number"
        customer.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify a customer"
                    type: "string"
                    example: "1"
            required:
                - identifier
        customerPaymentInstrument.identifier:
            type: "object"
            properties:
                identifier:
                    description: "An unique number to identify a customer's payment instrument"
                    type: "string"
                    example: "1"
            required:
                - identifier
    parameters:
        SessionToken:
            name: "x-synap-SessionToken"
            in: "header"
            description: "Synap's session token"
            required: true
            schema:
                type: "string"
                example: "<session_token>"
    requestBodies:
        UserAccessRightsRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            user:
                                type: "object"
                                properties:
                                    name:
                                        type: "string"
                            accessRightObject:
                                $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            accessRightActions:
                                $ref: "#/components/schemas/AccessRightActions"
        TeamAccessRightsRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            team:
                                type: "object"
                                properties:
                                    name:
                                        type: "string"
                            accessRightObject:
                                $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            accessRightActions:
                                $ref: "#/components/schemas/AccessRightActions"
        OrganizationAccessRightsRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            organization:
                                type: "object"
                                properties:
                                    name:
                                        type: "string"
                            accessRightObject:
                                $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            accessRightActions:
                                $ref: "#/components/schemas/AccessRightActions"
        PaymentRequestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            merchant:
                                $ref: "#/components/schemas/MerchantIdentifier"
                            payment:
                                type: "object"
                                properties:
                                    amount:
                                        description: "The total payment's value including tax"
                                        type: "number"
                                        minimum: 0
                                        example: 1.23
                                    taxAmount:
                                        description: "The payment's tax value"
                                        type: "number"
                                        minimum: 0
                                        example: 1.23
                                    currencyCode:
                                        description: "The payment's currency in ISO numeric code"
                                        type: "integer"
                                        format: "int32"
                                        minimum: 0
                                        maximum: 999
                                        example: 840
                                    merchantReferenceNumber:
                                        description: "An unique identifier allows merchant to track payment"
                                        type: "string"
                                        example: "merchant_reference_number"
                                    purposeOfPayment:
                                        description: "The summary of the payment"
                                        type: "string"
                                        example: "Donate For Child"
                                    description:
                                        description: "More details about the payment"
                                        type: "string"
                                        example: "Help us protect children around the world"
                                    captureFundLater:
                                        description: "Reserve funds now and will be charged at later time"
                                        type: "boolean"
                                required:
                                    - amount
                                    - currencyCode
                            paymentToken:
                                type: "object"
                                properties:
                                    identifier:
                                        description: "The payment token identifier"
                                        type: "string"
                                        example: "payment_token_identifier"
                                required:
                                    - identifier
                            paymentMethod:
                                type: "object"
                                properties:
                                    type:
                                        description: "unique payment method code from 'GetPaymentMethod' response"
                                        type: "string"
                                        example: "card"
                            device:
                                type: "object"
                                properties:
                                    identifier:
                                        type: "string"
                                        example: "06045338"
                                    type:
                                        description: "The platform of the shopper's device"
                                        type: "string"
                                        enum:
                                            - "web"
                                            - "ios"
                                            - "android"
                                        example: "web"
                                required:
                                    - type
                            paymentInstrument:
                                type: "object"
                                properties:
                                    type:
                                        type: "string"
                                        enum:
                                            - "card"
                                        example: "card"
                                    number:
                                        type: "string"
                                        example: "5522300012953018"
                                    cardVerificationValue:
                                        type: "integer"
                                        format: "int32"
                                        minimum: 1
                                        maximum: 9999
                                        example: 123
                                    expiryDate:
                                        description: "expiry date shall be presented as 'YYMM'"
                                        type: "integer"
                                        format: "int32"
                                        minimum: 1
                                        maximum: 9999
                                        example: 1234
                                    ownerName:
                                        description: "name printed on plastic card or owner's name"
                                        type: "string"
                                        example: "John Smith"
                                    issuingCountryCode:
                                        description: "The payment instrument issuing's ISO numeric country code"
                                        type: "integer"
                                        format: "int32"
                                        minimum: 0
                                        maximum: 999
                                        example: 840
                                    savePaymentDetails:
                                        description: "to save this payment instrument details onto customer profile"
                                        type: "boolean"
                                        example: true
                                required:
                                    - type
                                    - number
                                    - ownerName
                                    - issuingCountryCode
                            customer:
                                allOf:
                                    - $ref: "#/components/schemas/EntityIdentifier"
                                    - $ref: "#/components/schemas/CustomerRecord"
                            billingAddress:
                                $ref: "#/components/schemas/BillingAddress"
                            shippingAddress:
                                $ref: "#/components/schemas/ShippingAddress"
                            returnURL:
                                description: "URL where the shopper will be taken back to after payment processing"
                                type: "string"
                                format: "uri"
                                example: "https://payment.merchant.com/result/merchant_reference_number"
    responses:
        ResultOnlyResponse:
            description: "Receive only result object on response"
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            result:
                                $ref: "#/components/schemas/ResponseResult"
        GetAccessRightsResponse:
            description: "Returned list of user's access rights"
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            result:
                                $ref: "#/components/schemas/ResponseResult"
                            accessRights:
                                type: "array"
                                items:
                                    type: "object"
                                    properties:
                                        accessRightObject:
                                            type: "object"
                                            properties:
                                                name:
                                                    type: "string"
                                        accessRightActions:
                                            $ref: "#/components/schemas/AccessRightActions"
        PaymentResponse:
            description: "Receive payment's result object and/or action on response"
            content:
                application/json:
                    schema:
                        type: "object"
                        properties:
                            result:
                                $ref: "#/components/schemas/ResponseResult"
                            payment:
                                type: "object"
                                properties:
                                    switchSequence:
                                        type: "string"
                            action:
                                type: "object"
                                properties:
                                    type:
                                        type: "string"
                                        enum:
                                            - "redirect"
                                    url:
                                        type: "object"
                                        properties:
                                            address:
                                                type: "string"
                                            method:
                                                type: "string"
                        required:
                            - result
    securitySchemes:
        synapSessionToken:
            type: "apiKey"
            description: "Synap's session token is required for all commands except few specific purpose commands"
            name: x-synap-SessionToken
            in: header
security:
    - synapSessionToken: []
paths:
    /Echo:
        summary: "Ping the server"
        post:
            operationId: "Echo"
            tags:
                -  "System"
            summary: "Echo back request body"
            security: []
            requestBody:
                description: "content to be echoed back"
                content:
                    application/json:
                        schema:
                            anyOf:
                                - type: "array"
                                - type: "boolean"
                                - type: "number"
                                - type: "object"
                                - type: "string"
            responses:
                200:
                    description: "Echo back request body"
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - type: "array"
                                    - type: "boolean"
                                    - type: "number"
                                    - type: "object"
                                    - type: "string"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/Logout:
        summary: "User logout or sign out"
        post:
            tags:
                -  "Authentication"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/Login:
        summary: "User login or sign in"
        post:
            security: []
            tags:
                -  "Authentication"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                        password:
                                            type: "string"
                                            minLength: 1
            responses:
                200:
                    description: "Returned a session token and related data"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    sessionToken:
                                        type: "string"
                                        minLength: 1
                                    user:
                                        type: "object"
                                        properties:
                                            inactivityTimeout:
                                                type: "number"
                                            name:
                                                type: "string"
                                            preferName:
                                                type: "string"
                                            lastLogin:
                                                type: "string"
                                                format: "date-time"
                                    passwordPolicy:
                                        type: "object"
                                        properties:
                                            minimumLength:
                                                type: "number"
                                            validationChecks:
                                                $ref: "#/components/schemas/ValidationChecks"
                                    organization:
                                        type: "object"
                                        properties:
                                            name:
                                                type: "string"
                                            fullname:
                                                type: "string"
                                                description: "organization name to be used for display"
                                    merchant:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                    mobiles:
                                        $ref: "#/components/schemas/UserMobileContactRecords"
                                    emails:
                                        $ref: "#/components/schemas/UserEmailContactRecords"
                                    landlines:
                                        $ref: "#/components/schemas/UserLandlineContactRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ContactShortList:
        summary: "Retrieve list of contact for an user"
        post:
            security: []
            tags:
                -  "Authentication"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - name
                            required:
                                - user
            responses:
                200:
                    description: "Returned a list of user's contact"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    mobiles:
                                        $ref: "#/components/schemas/UserMobileContactRecords"
                                    emails:
                                        $ref: "#/components/schemas/UserEmailContactRecords"
                                    landlines:
                                        $ref: "#/components/schemas/UserLandlineContactRecords"
                                required:
                                    - result
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ChangePassword:
        summary: "Change user's existing password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                        password:
                                            type: "string"
                                            minLength: 1
                                        newPassword:
                                            type: "string"
                                            minLength: 1
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RequestToResetPassword:
        summary: "Request to reset user's existing password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            minLength: 1
                                location:
                                    type: "object"
                                    properties:
                                        ipAddress:
                                            type: "string"
                                        currentTimestamp:
                                            type: "string"
                                            format: "date-time"
                                application:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                email:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                mobile:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
            responses:
                200:
                    description: "Returned an URL for user to reset password"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    password:
                                        type: "object"
                                        properties:
                                            resetURL:
                                                type: "string"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/VerifyResetPasswordToken:
        summary: "Verify security token for reset password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                password:
                                    type: "object"
                                    properties:
                                        resetToken:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - resetToken
                            required:
                                - password
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ResetPassword:
        summary: "Reset user's reset password"
        post:
            security: []
            tags:
                -  "Password"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        newPassword:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - newPassword
                                password:
                                    type: "object"
                                    properties:
                                        resetToken:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - resetToken
                                location:
                                    type: "object"
                                    properties:
                                        ipAddress:
                                            type: "string"
                                            minLength: 1
                                    required:
                                        - ipAddress
                            required:
                                - user
                                - password
                                - location
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/CheckUserAccessRights:
        summary: "Check user's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                accessRight:
                                    type: "object"
                                    properties:
                                        expression:
                                            type: "string"
                                            description: "arbitrary rights expression"
                                            example: "%user(joe) and transact(reversal)"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserAccessRights:
        summary: "Get list of user's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                accessRightObject:
                                    $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            required:
                                - user
                                - accessRightObject
            responses:
                200:
                    $ref: "#/components/responses/GetAccessRightsResponse"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetTeamAccessRights:
        summary: "Get list of team's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                accessRightObject:
                                    $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            required:
                                - team
                                - accessRightObject
            responses:
                200:
                    $ref: "#/components/responses/GetAccessRightsResponse"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetOrganizationAccessRights:
        summary: "Get list of organization's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                accessRightObject:
                                    $ref: "#/components/schemas/AccessRightObjectNameOnRequest"
                            required:
                                - organization
                                - accessRightObject
            responses:
                200:
                    $ref: "#/components/responses/GetAccessRightsResponse"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GrantUserAccessRights:
        summary: "Grant user's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                $ref: "#/components/requestBodies/UserAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GrantTeamAccessRights:
        summary: "Grant team's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                $ref: "#/components/requestBodies/TeamAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GrantOrganizationAccessRights:
        summary: "Grant organization's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                $ref: "#/components/requestBodies/OrganizationAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RevokeUserAccessRights:
        summary: "Revoke user's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                $ref: "#/components/requestBodies/UserAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RevokeTeamAccessRights:
        summary: "Revoke team's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                $ref: "#/components/requestBodies/TeamAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/RevokeOrganizationAccessRights:
        summary: "Revoke organization's access rights"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                $ref: "#/components/requestBodies/OrganizationAccessRightsRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUser:
        summary: "Get user's details"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    users:
                                        $ref: "#/components/schemas/UserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchUser:
        summary: "Fetch more user's details with cursor"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    users:
                                        $ref: "#/components/schemas/UserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserDetailsOfAnUser:
        summary: "Get user's details of an user"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - user
            responses:
                200:
                    description: "Returned user details record of an user"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    user:
                                        $ref: "#/components/schemas/UserRecord"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewUser:
        summary: "Create a new user's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                policy:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        inactivityTimeout:
                                            type: "integer"
                                            format: "int32"
                                        maximumSessions:
                                            type: "integer"
                                            format: "int32"
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            description: "default team of an user"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        preferName:
                                            type: "string"
                                        newPassword:
                                            type: "string"
                                        oneTimePassword:
                                            type: "string"
                                        firstTimePassword:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateUser:
        summary: "Update an existing user's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/organization.name"
                                policy:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        inactivityTimeout:
                                            type: "integer"
                                            format: "int32"
                                        maximumSessions:
                                            type: "integer"
                                            format: "int32"
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                            description: "default team of an user"
                                user:
                                    allOf:
                                        - $ref: "#/components/schemas/RecordStatus"
                                        - type: "object"
                                          properties:
                                            name:
                                                type: "string"
                                            preferName:
                                                type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteUser:
        summary: "Delete an existing user's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserProfile:
        summary: "Get user's profile"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
            responses:
                200:
                    description: "Returned list of user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    userProfile:
                                        $ref: "#/components/schemas/UserProfile"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewUserProfile:
        summary: "Create a new user profile's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                userProfile:
                                    $ref: "#/components/schemas/UserProfile"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateUserProfile:
        summary: "Update an existing user profile's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                userProfile:
                                    $ref: "#/components/schemas/UserProfile"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserMailingAddress:
        summary: "Get user's address"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                mailingAddress:
                                    $ref: "#/components/schemas/MailingAddressType"
                            required:
                                - user
                                - mailingAddress
            responses:
                200:
                    description: "Returned list of user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    mailingAddresses:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                mailingAddress:
                                                    allOf:
                                                        - $ref: "#/components/schemas/RecordStatus"
                                                        - $ref: "#/components/schemas/CreateDateTime"
                                                        - $ref: "#/components/schemas/MailingAddressType"
                                                        - $ref: "#/components/schemas/MailingAddress"
                                            required:
                                                - mailingAddress
                                required:
                                    - result
                                    - mailingAddresses
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewUserMailingAddress:
        summary: "Create a new user's mailing address"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                mailingAddress:
                                    allOf:
                                        - $ref: "#/components/schemas/MailingAddressType"
                                        - $ref: "#/components/schemas/MailingAddress"
                            required:
                                - user
                                - mailingAddress
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateUserMailingAddress:
        summary: "Update an existing user's mailing address"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                mailingAddress:
                                    allOf:
                                        - $ref: "#/components/schemas/MailingAddressType"
                                        - $ref: "#/components/schemas/MailingAddress"
                            required:
                                - user
                                - mailingAddress
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteUserMailingAddress:
        summary: "Delete an existing user's mailing address"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                mailingAddress:
                                    $ref: "#/components/schemas/MailingAddressType"
                            required:
                                - user
                                - mailingAddress
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserContact:
        summary: "Get user's contact"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                contact:
                                    allOf:
                                        - $ref: "#/components/schemas/UserContactType"
                                        - type: "object"
                                          properties:
                                            identifier:
                                                type: "string"
                                        - required:
                                            - type
                            required:
                                - user
            responses:
                200:
                    description: "Returned list of user contact records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    users:
                                        $ref: "#/components/schemas/UserContactRecords"
                                required:
                                    - result
                                    - users
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchUserContact:
        summary: "Fetch more user's contacts with cursor"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of user contact records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    users:
                                        $ref: "#/components/schemas/UserContactRecords"
                                required:
                                    - result
                                    - users
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserContactOfAnUser:
        summary: "Get an user's contact"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                contact:
                                    allOf:
                                        - $ref: "#/components/schemas/UserContactType"
                                        - type: "object"
                                          properties:
                                            identifier:
                                                type: "string"
                            required:
                                - user
            responses:
                200:
                    description: "Returned list of contact records of an user"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    user:
                                        type: "object"
                                        properties:
                                            name:
                                                type: "string"
                                        required:
                                            - name
                                    mobiles:
                                        $ref: "#/components/schemas/UserMobileContactRecords"
                                    emails:
                                        $ref: "#/components/schemas/UserEmailContactRecords"
                                    landlines:
                                        $ref: "#/components/schemas/UserLandlineContactRecords"
                                required:
                                    - result
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewUserContact:
        summary: "Create a new contact's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                contact:
                                    allOf:
                                        - $ref: "#/components/schemas/UserContactType"
                                        - $ref: "#/components/schemas/ContactAddress"
                                        - type: "object"
                                          properties:
                                            class:
                                                type: "string"
                                        - required:
                                            - type
                                            - address
                                flags:
                                    $ref: "#/components/schemas/UserContactFlags"
                            required:
                                - user
                                - contact
                                - flags
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateUserContact:
        summary: "Update an existing contact's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                contact:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                        address:
                                            type: "string"
                                        class:
                                            type: "string"
                                    required:
                                        - identifier
                                flags:
                                    $ref: "#/components/schemas/UserContactFlags"
                            required:
                                - user
                                - contact
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteUserContact:
        summary: "Delete an existing contact's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                contact:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                flags:
                                    $ref: "#/components/schemas/UserContactFlags"
                            required:
                                - user
                                - contact
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/VerifyUserContact:
        summary: "Verify an existing contact's record"
        post:
            tags:
                -  "User"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                contact:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                flags:
                                    $ref: "#/components/schemas/UserContactFlags"
                            required:
                                - user
                                - contact
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetTeam:
        summary: "Get team's details"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - team
                                - user
            responses:
                200:
                    description: "Returned list of team records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    teams:
                                        $ref: "#/components/schemas/TeamRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchTeam:
        summary: "Fetch more team's details with cursor"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of team records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    teams:
                                        $ref: "#/components/schemas/TeamRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewTeam:
        summary: "Create a new team's record"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        restricted:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateTeam:
        summary: "Update an existing team's record"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    allOf:
                                        - type: "object"
                                          properties:
                                            name:
                                                type: "string"
                                        - $ref: "#/components/schemas/RecordStatus"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteTeam:
        summary: "Delete an existing team's record"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                migrateToTeam:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - team
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetTeamUser:
        summary: "Get list of users for a team or list of teams for an user"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of team user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    teams:
                                        $ref: "#/components/schemas/TeamUserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchTeamUser:
        summary: "Fetch more team users with cursor"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of team user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    teams:
                                        $ref: "#/components/schemas/TeamUserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewTeamUser:
        summary: "Create a new team user's record"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateTeamUser:
        summary: "Update an existing team user's record"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                user:
                                    allOf:
                                        - type: "object"
                                          properties:
                                            name:
                                                type: "string"
                                        - $ref: "#/components/schemas/RecordStatus"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteTeamUser:
        summary: "Delete an existing team user's record"
        post:
            tags:
                -  "Team"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetAccessRightObject:
        summary: "Get access rights's object"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - accessRightObject
            responses:
                200:
                    description: "Returned list of access rights object records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    accessRightObjects:
                                        $ref: "#/components/schemas/AccessRightObjectRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchAccessRightObject:
        summary: "Fetch more access right object's details with cursor"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of access right object records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    accessRightObjects:
                                        $ref: "#/components/schemas/AccessRightObjectRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewAccessRightObject:
        summary: "Create a new access right object's record"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        restricted:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - accessRightObject
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateAccessRightObject:
        summary: "Update an existing access right object's record"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    allOf:
                                        - type: "object"
                                          properties:
                                            name:
                                                type: "string"
                                          required:
                                            - name
                                        - $ref: "#/components/schemas/RecordStatus"
                            required:
                                - accessRightObject
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteAccessRightObject:
        summary: "Delete an existing access right object's record"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - accessRightObject
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetAccessRightAction:
        summary: "Get access rights's action"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - accessRightObject
            responses:
                200:
                    description: "Returned list of access rights action records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    accessRightObjects:
                                        $ref: "#/components/schemas/AccessRightActionRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchAccessRightAction:
        summary: "Fetch more access right actions with cursor"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of access right action records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    accessRightObjects:
                                        $ref: "#/components/schemas/AccessRightActionRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewAccessRightAction:
        summary: "Create a new access right action's record"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        actionName:
                                            type: "string"
                                    required:
                                        - name
                                        - actionName
                            required:
                                - accessRightObject
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateAccessRightAction:
        summary: "Update an existing access right action's record"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        actionName:
                                            type: "string"
                                    required:
                                        - name
                                        - actionName
                            required:
                                - accessRightObject
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteAccessRightAction:
        summary: "Delete an existing access right action's record"
        post:
            tags:
                -  "Access Rights"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                accessRightObject:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        actionName:
                                            type: "string"
                                    required:
                                        - name
                                        - actionName
                            required:
                                - accessRightObject
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPasswordPolicy:
        summary: "Get password policy's details"
        post:
            tags:
                -  "Password Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                passwordPolicy:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of password policy records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    passwordPolicies:
                                        $ref: "#/components/schemas/PasswordPolicyRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchPasswordPolicy:
        summary: "Fetch more password policy with cursor"
        post:
            tags:
                -  "Password Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of password policy records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    passwordPolicies:
                                        $ref: "#/components/schemas/PasswordPolicyRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewPasswordPolicy:
        summary: "Create a new password policy's record"
        post:
            tags:
                -  "Password Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                passwordPolicy:
                                    $ref: "#/components/schemas/PasswordPolicy"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdatePasswordPolicy:
        summary: "Update an existing password policy's record"
        post:
            tags:
                -  "Password Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                passwordPolicy:
                                    $ref: "#/components/schemas/PasswordPolicy"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeletePasswordPolicy:
        summary: "Delete an existing password policy's record"
        post:
            tags:
                -  "Password Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                passwordPolicy:
                                    $ref: "#/components/schemas/PasswordPolicyName"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetAuthenticationPolicy:
        summary: "Get authentication policy's details"
        post:
            tags:
                -  "Authentication Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                authenticationPolicy:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of authentication policy records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    authenticationPolicies:
                                        $ref: "#/components/schemas/AuthenticationPolicyRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchAuthenticationPolicy:
        summary: "Fetch more authentication policy with cursor"
        post:
            tags:
                -  "Authentication Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of authentication policy records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    authenticationPolicies:
                                        $ref: "#/components/schemas/AuthenticationPolicyRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewAuthenticationPolicy:
        summary: "Create a new authentication policy's record"
        post:
            tags:
                -  "Authentication Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                authenticationPolicy:
                                    $ref: "#/components/schemas/AuthenticationPolicyRecord"
                                passwordPolicy:
                                    $ref: "#/components/schemas/PasswordPolicyName"
                            required:
                                - authenticationPolicy
                                - passwordPolicy
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateAuthenticationPolicy:
        summary: "Update an existing authentication policy's record"
        post:
            tags:
                -  "Authentication Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                authenticationPolicy:
                                    $ref: "#/components/schemas/AuthenticationPolicyRecord"
                                passwordPolicy:
                                    $ref: "#/components/schemas/PasswordPolicyName"
                            required:
                                - authenticationPolicy
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteAuthenticationPolicy:
        summary: "Delete an existing authentication policy's record"
        post:
            tags:
                -  "Authentication Policy"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                authenticationPolicy:
                                    $ref: "#/components/schemas/AuthenticationPolicyName"
                                migrateToAuthenticationPolicy:
                                    $ref: "#/components/schemas/AuthenticationPolicyName"
                            required:
                                - authenticationPolicy
                                - migrateToAuthenticationPolicy
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetOrganization:
        summary: "Get organization's details"
        post:
            tags:
                -  "Organization"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/OrganizationName"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - organization
            responses:
                200:
                    description: "Returned list of organization records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    organizations:
                                        $ref: "#/components/schemas/OrganizationRecords"
                                required:
                                    - result
                                    - organizations
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchOrganization:
        summary: "Fetch more organization with cursor"
        post:
            tags:
                -  "Organization"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of organization records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    organizations:
                                        $ref: "#/components/schemas/OrganizationRecords"
                                required:
                                    - result
                                    - organizations
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewOrganization:
        summary: "Create a new organization's record"
        post:
            tags:
                -  "Organization"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/OrganizationRecord"
                                authenticationPolicy:
                                    $ref: "#/components/schemas/AuthenticationPolicyName"
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - organization
                                - authenticationPolicy
                                - team
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateOrganization:
        summary: "Update an existing organization's record"
        post:
            tags:
                -  "Organization"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/OrganizationRecord"
                                authenticationPolicy:
                                    $ref: "#/components/schemas/AuthenticationPolicyName"
                                team:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - organization
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteOrganization:
        summary: "Update an existing organization's record"
        post:
            tags:
                -  "Organization"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/OrganizationName"
                                migrateToOrganization:
                                    $ref: "#/components/schemas/OrganizationName"
                            required:
                                - organization
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetSessionUser:
        summary: "Get list of session user records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
            responses:
                200:
                    description: "Returned list of session user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    totalUsers:
                                        description: "The total number of users whom has session records"
                                        type: "number"
                                    totalSessions:
                                        description: "The total number of session records in the system"
                                        type: "number"
                                    sessionUsers:
                                        $ref: "#/components/schemas/SessionUserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchSessionUser:
        summary: "Fetch more session users with cursor"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of session user records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    sessionUsers:
                                        $ref: "#/components/schemas/SessionUserRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetUserSession:
        summary: "Get list of user's session records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                                user:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                    required:
                                        - name
                            required:
                                - user
            responses:
                200:
                    description: "Returned list of user's session records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    sessionUsers:
                                        $ref: "#/components/schemas/SessionRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchUserSession:
        summary: "Fetch more user's session with cursor"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
            responses:
                200:
                    description: "Returned list of user's session records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    sessionUsers:
                                        $ref: "#/components/schemas/SessionRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/LockSession:
        summary: "Lock one or more user's session records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            oneOf:
                                - type: "object"
                                  properties:
                                    user:
                                        type: "object"
                                        properties:
                                            name:
                                                type: "string"
                                        required:
                                            - name
                                  required:
                                    - user
                                - type: "object"
                                  properties:
                                    session:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                        required:
                                            - identifier
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UnlockSession:
        summary: "Unlock one or more user's session records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            oneOf:
                                - type: "object"
                                  properties:
                                    user:
                                        type: "object"
                                        properties:
                                            name:
                                                type: "string"
                                        required:
                                            - name
                                  required:
                                    - user
                                - type: "object"
                                  properties:
                                    session:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                        required:
                                            - identifier
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteSession:
        summary: "Delete one or more user's session records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            oneOf:
                                - type: "object"
                                  properties:
                                    user:
                                        type: "object"
                                        properties:
                                            name:
                                                type: "string"
                                        required:
                                            - name
                                  required:
                                    - user
                                - type: "object"
                                  properties:
                                    session:
                                        type: "object"
                                        properties:
                                            identifier:
                                                type: "string"
                                        required:
                                            - identifier
                                  required:
                                    - session
                                - type: "object"
                                  properties:
                                    session:
                                        type: "object"
                                        properties:
                                            lastActivityDateTime:
                                                type: "string"
                                                format: "date-time"
                                        required:
                                            - lastActivityDateTime
                                  required:
                                    - session
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteExpiredSession:
        summary: "Delete all expired user's session records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteDeadSession:
        summary: "Delete all dead user's session records"
        post:
            tags:
                -  "Session"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetCurrency:
        summary: "Get list of currencies"
        post:
            security: []
            tags:
                -  "Countries & Currencies"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                currency:
                                    oneOf:
                                        - type: "object"
                                          properties:
                                            isoAlphaCode:
                                                type: "string"
                                        - type: "object"
                                          properties:
                                            isoNumericCode:
                                                type: "number"
            responses:
                200:
                    description: "Returned list of currency records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    currencies:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                currency:
                                                    $ref: "#/components/schemas/CurrencyRecord"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetCountry:
        summary: "Get list of countries"
        post:
            security: []
            tags:
                -  "Countries & Currencies"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                country:
                                    oneOf:
                                        - type: "object"
                                          properties:
                                            isoAlpha2Code:
                                                type: "string"
                                        - type: "object"
                                          properties:
                                            isoAlpha3Code:
                                                type: "string"
                                        - type: "object"
                                          properties:
                                            isoNumericCode:
                                                type: "number"
            responses:
                200:
                    description: "Returned list of country records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    currencies:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                country:
                                                    $ref: "#/components/schemas/CountryRecord"
                                                currency:
                                                    $ref: "#/components/schemas/CurrencyRecord"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPayment:
        summary: "Get list of payments"
        post:
            tags:
                -  "Payment History"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    $ref: "#/components/schemas/MerchantIdentifier"
                                customer:
                                    $ref: "#/components/schemas/EntityIdentifier"
                                filters:
                                    type: "object"
                                    properties:
                                        customer:
                                            type: "object"
                                            properties:
                                                identifier:
                                                    type: "string"
                                        payment:
                                            type: "object"
                                            properties:
                                                switchSequence:
                                                    type: "string"
                                        filters:
                                            type: "object"
                                            properties:
                                                status:
                                                    type: "object"
                                                    properties:
                                                        success:
                                                            type: "string"
                                                        refund:
                                                            type: "string"
                                                        capture:
                                                            type: "string"
                                                        not:
                                                            type: "object"
                                                            properties:
                                                                success:
                                                                    type: "string"
                                                localDate:
                                                    type: "object"
                                                    properties:
                                                        start:
                                                            type: "string"
                                                            format: "date"
                                                        end:
                                                            type: "string"
                                                            format: "date"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - merchant
            responses:
                200:
                    description: "Returned list of payment records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    payments:
                                        $ref: "#/components/schemas/PaymentRecords"
                                required:
                                    - result
                                    - payments
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchPayment:
        summary: "Fetch more payment records with cursor"
        post:
            tags:
                -  "Payment History"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of payment records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    payments:
                                        $ref: "#/components/schemas/PaymentRecords"
                                required:
                                    - result
                                    - payments
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentWithSwitchSequence:
        summary: "Get payment"
        post:
            tags:
                -  "Payment History"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
            responses:
                200:
                    description: "Returned list of payment records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    payments:
                                        $ref: "#/components/schemas/PaymentRecords"
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentToken:
        summary: "Get payment token"
        post:
            tags:
                -  "Payment Token"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    $ref: "#/components/schemas/MerchantIdentifier"
                                paymentToken:
                                    type: "object"
                                    properties:
                                        identifier:
                                            description: "indicates the specific payment token details to retrieved. 'all' will retrieve all payment tokens for the merchant."
                                            type: "string"
                                            example: "all"
                                        name:
                                            type: "string"
                                    required:
                                        - identifier
                                filters:
                                    type: "object"
                                    properties:
                                        recordStatus:
                                            type: "object"
                                            properties:
                                                active:
                                                    type: "boolean"
                                                inactive:
                                                    type: "boolean"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - merchant
                                - paymentToken
            responses:
                200:
                    description: "Receive result object and payment tokens on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    paymentTokens:
                                        $ref: "#/components/schemas/PaymentTokenRecords"
                                required:
                                    - result
                                    - paymentTokens
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchPaymentToken:
        summary: "Fetch more payment tokens with cursor"
        post:
            tags:
                -  "Payment Token"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of payment tokens"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentTokens:
                                        $ref: "#/components/schemas/PaymentTokenRecords"
                                required:
                                    - result
                                    - paymentTokens
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewPaymentToken:
        summary: "Create a new payment token"
        post:
            tags:
                -  "Payment Token"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    $ref: "#/components/schemas/MerchantIdentifier"
                                paymentToken:
                                    allOf:
                                        - $ref: "#/components/schemas/PaymentTokenRecord"
                                        - required:
                                            - amount
                                            - currencyCode
                                            - name
                                            - description
                                            - amountIsFlexible
                                            - payButtonText
                                url:
                                    type: "object"
                                    properties:
                                        baseURL:
                                            type: "string"
                                            format: "uri"
                                    required:
                                        - baseURL
                            required:
                                - merchant
                                - paymentToken
            responses:
                200:
                    description: "Receive result object and payment token on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentToken:
                                        $ref: "#/components/schemas/EntityIdentifier"
                                    url:
                                        type: "object"
                                        properties:
                                            path:
                                                type: "string"
                                        required:
                                            - path
                                required:
                                    - result
                                    - paymentToken
                                    - url
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdatePaymentToken:
        summary: "Update a payment token"
        post:
            tags:
                -  "Payment Token"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentToken:
                                    allOf:
                                        - $ref: "#/components/schemas/RecordStatus"
                                        - $ref: "#/components/schemas/EntityIdentifier"
                                        - $ref: "#/components/schemas/PaymentTokenRecord"
                                url:
                                    type: "object"
                                    properties:
                                        baseURL:
                                            type: "string"
                                            format: "uri"
                                    required:
                                        - baseURL
                            required:
                                - paymentToken
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeletePaymentToken:
        summary: "Delete an existing payment token"
        post:
            tags:
                -  "Payment Token"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentToken:
                                    $ref: "#/components/schemas/EntityIdentifier"
                            required:
                                - paymentToken
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentMethod:
        summary: "Get list of payment method"
        post:
            tags:
                -  "Payment Method [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    $ref: "#/components/schemas/MerchantIdentifier"
                                payment:
                                    type: "object"
                                    properties:
                                        amount:
                                            description: "The payment's value"
                                            type: "number"
                                            example: 1.23
                                        currencyCode:
                                            description: "The payment's currency in ISO numeric code"
                                            type: "integer"
                                            format: "int32"
                                            example: 840
                                        channel:
                                            description: "The platform of the shopper's device"
                                            type: "string"
                                            enum:
                                                - "web"
                                                - "ios"
                                                - "android"
                                    required:
                                        - amount
                                        - currencyCode
                                        - channel
                                customer:
                                    type: "object"
                                    properties:
                                        locale:
                                            description: "Shopper's preferred language and country code"
                                            type: "string"
                                            example: "en-US"
                                        countryCode:
                                            description: "Shopper's ISO numeric country code"
                                            type: "number"
                                            example: 840
                            required:
                                - merchant
            responses:
                default:
                    description: "Receive result object and/or payment methods on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentMethods:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                paymentMethod:
                                                    type: "object"
                                                    properties:
                                                        name:
                                                            description: "name of the payment method to be presented on screen"
                                                            type: "string"
                                                        type:
                                                            description: "unique payment method code to be included in 'Pay' command"
                                                            type: "string"
    /command/Pay:
        summary: "Make a payment"
        post:
            tags:
                -  "Payment"
            requestBody:
                $ref: "#/components/requestBodies/PaymentRequestBody"
            responses:
                default:
                    $ref: "#/components/responses/PaymentResponse"
    /command/CapturePayment:
        summary: "Capture payment that hold separately"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
                                        amount:
                                            description: "The payment's value"
                                            type: "number"
                                            minimum: 0
                                            example: 1.23
                                    required:
                                        - switchSequence
                                        - amount
            responses:
                default:
                    description: "Receive capture's result object on response"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
    /command/RefundPayment:
        summary: "Refund of a payment"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
                                refund:
                                    type: "object"
                                    properties:
                                        amount:
                                            type: "number"
                                        reason:
                                            type: "string"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/SendPaymentReceipt:
        summary: "Send a payment receipt"
        post:
            tags:
                -  "Payment [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                payment:
                                    type: "object"
                                    properties:
                                        switchSequence:
                                            type: "string"
                                paymentReceipt:
                                    type: "object"
                                    properties:
                                        sendTo:
                                            type: "object"
                                            properties:
                                                emails:
                                                    type: "array"
                                                    items:
                                                        type: "object"
                                                        properties:
                                                            email:
                                                                $ref: "#/components/schemas/ContactAddress"
                                                mobiles:
                                                    type: "array"
                                                    items:
                                                        type: "object"
                                                        properties:
                                                            mobile:
                                                                $ref: "#/components/schemas/ContactAddress"
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/CalculateTaxAmount:
        summary: "Calculate the tax amount of a given tax category code"
        post:
            tags:
                -  "Tax [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                taxCategory:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                payment:
                                    type: "object"
                                    properties:
                                        amount:
                                            type: "number"
                                        currencyCode:
                                            $ref: "#/components/schemas/CurrencyCode"
                                    required:
                                        - amount
                                        - currencyCode
                                billingAddress:
                                    $ref: "#/components/schemas/MailingAddress"
                                shippingAddress:
                                    $ref: "#/components/schemas/MailingAddress"
                            required:
                                - taxCategory
                                - payment
            responses:
                200:
                    description: "Returned the calculated tax amount"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    payment:
                                        type: "object"
                                        properties:
                                            amount:
                                                type: "number"
                                            taxAmount:
                                                type: "number"
                                            currencyCode:
                                                $ref: "#/components/schemas/CurrencyCode"
                                        required:
                                            - amount
                                            - taxAmount
                                            - currencyCode
                                required:
                                    - result
                                    - payment
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetCustomer:
        summary: "Get list of customers"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    $ref: "#/components/schemas/MerchantIdentifier"
                                customer:
                                    $ref: "#/components/schemas/EntityIdentifier"
                                filters:
                                    type: "object"
                                    properties:
                                        customer:
                                            type: "object"
                                            properties:
                                                identifier:
                                                    type: "string"
                                                name:
                                                    type: "string"
                                                asGuest:
                                                    type: "boolean"
                                                withAccount:
                                                    type: "boolean"
                                                createDate:
                                                    type: "object"
                                                    properties:
                                                        start:
                                                            type: "string"
                                                            format: "date"
                                                        end:
                                                            type: "string"
                                                            format: "date"
                                sortby:
                                    type: "object"
                                    properties:
                                        customer:
                                            type: "object"
                                            properties:
                                                name:
                                                    type: "string"
                                                    enum:
                                                        - "asc"
                                                        - "desc"
                                                totalAmountSpent:
                                                    type: "string"
                                                    enum:
                                                        - "asc"
                                                        - "desc"
                                                totalAmountRefunded:
                                                    type: "string"
                                                    enum:
                                                        - "asc"
                                                        - "desc"
                                                totalAmountDisputeLost:
                                                    type: "string"
                                                    enum:
                                                        - "asc"
                                                        - "desc"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - organization
                                - merchant
                                - customer
            responses:
                200:
                    description: "Returned list of customer records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    customers:
                                        $ref: "#/components/schemas/CustomerRecords"
                                required:
                                    - result
                                    - customers
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchCustomer:
        summary: "Fetch more customer records with cursor"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of customer records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    customers:
                                        $ref: "#/components/schemas/CustomerRecords"
                                required:
                                    - result
                                    - customers
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewCustomer:
        summary: "Create a new customer"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                merchant:
                                    $ref: "#/components/schemas/MerchantIdentifier"
                                customer:
                                    allOf:
                                        - $ref: "#/components/schemas/CustomerRecord"
                                        - required:
                                            - name
                                            - email
                                billingAddress:
                                    allOf:
                                        - $ref: "#/components/schemas/BillingAddress"
                                        - required:
                                            - countryCode
                                            - addressLine1
                                            - city
                                            - provinceState
                                            - postalCode
                                shippingAddress:
                                    allOf:
                                        - $ref: "#/components/schemas/ShippingAddress"
                                        - required:
                                            - countryCode
                                            - addressLine1
                                            - city
                                            - provinceState
                                            - postalCode
                                tax:
                                    $ref: "#/components/schemas/TaxRecord"
                            required:
                                - merchant
                                - customer
                                - billingAddress
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateCustomer:
        summary: "Update a customer record"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                customer:
                                    allOf:
                                        - $ref: "#/components/schemas/RecordStatus"
                                        - $ref: "#/components/schemas/EntityIdentifier"
                                        - $ref: "#/components/schemas/CustomerRecord"
                                customerPaymentInstrument:
                                    allOf:
                                        - $ref: "#/components/schemas/EntityIdentifier"
                                        - $ref: "#/components/schemas/CustomerPaymentInstrumentRecord"
                                        - required:
                                            - identifier
                                            - number
                                            - maskedNumber
                                billingAddress:
                                    $ref: "#/components/schemas/BillingAddress"
                                shippingAddress:
                                    $ref: "#/components/schemas/ShippingAddress"
                                tax:
                                    $ref: "#/components/schemas/TaxRecord"
                            required:
                                - customer
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteCustomer:
        summary: "Delete an existing customer record"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                customer:
                                    $ref: "#/components/schemas/EntityIdentifier"
                            required:
                                - customer
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetCustomerPaymentInstrument:
        summary: "Get list of customer's payment instrument"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                customer:
                                    $ref: "#/components/schemas/customer.identifier"
                                customerPaymentInstrument:
                                    $ref: "#/components/schemas/customerPaymentInstrument.identifier"
                                filters:
                                    type: "object"
                                    properties:
                                        paymentInstrumentTypes:
                                            type: "array"
                                            items:
                                                type: "string"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - customer
            responses:
                200:
                    description: "Returned list of customer's payment instrument records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    customerPaymentInstruments:
                                        $ref: "#/components/schemas/CustomerPaymentInstrumentRecords"
                                required:
                                    - result
                                    - customerPaymentInstruments
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchCustomerPaymentInstrument:
        summary: "Fetch more customer's payment instrument records with cursor"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of customer's payment instrument records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    customerPaymentInstruments:
                                        $ref: "#/components/schemas/CustomerPaymentInstrumentRecords"
                                required:
                                    - result
                                    - customerPaymentInstruments
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewCustomerPaymentInstrument:
        summary: "Create a new customer's payment instrument"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                customer:
                                    $ref: "#/components/schemas/customer.identifier"
                                customerPaymentInstrument:
                                    $ref: "#/components/schemas/CustomerPaymentInstrumentRecord"
                            required:
                                - customer
                                - customerPaymentInstrument
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdateCustomerPaymentInstrument:
        summary: "Update a customer's payment instrument record"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                customerPaymentInstrument:
                                    allOf:
                                        - $ref: "#/components/schemas/customerPaymentInstrument.identifier"
                                        - $ref: "#/components/schemas/CustomerPaymentInstrumentRecord"
                            required:
                                - customerPaymentInstrument
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeleteCustomerPaymentInstrument:
        summary: "Delete an existing customer's payment instrument record"
        post:
            tags:
                -  "Customer"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                customerPaymentInstrument:
                                    $ref: "#/components/schemas/customerPaymentInstrument.identifier"
                            required:
                                - customerPaymentInstrument
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentInstrumentProduct:
        summary: "Retrieve list of payment instrument's product records"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/organization.name"
                                user:
                                    $ref: "#/components/schemas/user.identifier"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - organization
            responses:
                200:
                    description: "Returned list of payment instrument's product records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    paymentInstrumentProducts:
                                        $ref: "#/components/schemas/PaymentInstrumentProductRecords"
                                required:
                                    - result
                                    - paymentInstrumentProducts
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchPaymentInstrumentProduct:
        summary: "Fetch more payment instrument's product records with cursor"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of payment instrument's product records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentInstrumentProducts:
                                        $ref: "#/components/schemas/PaymentInstrumentProductRecords"
                                required:
                                    - result
                                    - paymentInstrumentProducts
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewPaymentInstrumentProduct:
        summary: "Create a new payment instrument's product"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/organization.name"
                                paymentInstrumentNumber:
                                    $ref: "#/components/schemas/paymentInstrumentNumber.name"
                                paymentInstrumentSerial:
                                    $ref: "#/components/schemas/paymentInstrumentSerial.name"
                                paymentInstrumentProduct:
                                    allOf:
                                        - $ref: "#/components/schemas/PaymentInstrumentProductRecord"
                                        - required:
                                            - category
                                            - issuancePrefix
                                            - currencyCode
                                            - expiryExpectancy
                                            - expiryLife
                                            - cyclePeriod
                                            - appliedIndicator
                                            - minimumScore
                                            - kycDefaultMaximumBalance
                            required:
                                - organization
                                - paymentInstrumentNumber
                                - paymentInstrumentSerial
                                - paymentInstrumentProduct
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdatePaymentInstrumentProduct:
        summary: "Update a payment instrument's product record"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentInstrumentNumber:
                                    $ref: "#/components/schemas/paymentInstrumentNumber.name"
                                paymentInstrumentSerial:
                                    $ref: "#/components/schemas/paymentInstrumentSerial.name"
                                paymentInstrumentProduct:
                                    $ref: "#/components/schemas/PaymentInstrumentProductRecord"
                            required:
                                - paymentInstrumentProduct
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeletePaymentInstrumentProduct:
        summary: "Delete an existing payment instrument's product record"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentInstrumentProduct:
                                    type: "object"
                                    properties:
                                        name:
                                            type: "string"
                                        type:
                                            type: "string"
                                    required:
                                        - name
                                        - type
                            required:
                                - paymentInstrumentProduct
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/ActivatePaymentInstrument:
        summary: "Activate payment instrument function for an user"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    $ref: "#/components/schemas/user.name"
                            required:
                                - user
            responses:
                200:
                    description: "Returned list of payment instrument records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentInstrumentProducts:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                paymentInstrumentProduct:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            description: "An unique number to identify a payment instrument product"
                                                            type: "string"
                                                            example: "1"
                                                        type:
                                                            description: "type pf payment instrument product"
                                                            type: "string"
                                                            example: "wallet"
                                                        name:
                                                            description: "name of payment instrument product"
                                                            type: "string"
                                                            example: "USD Wallet"
                                required:
                                    - result
                                    - paymentInstrumentProducts
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentInstrument:
        summary: "Retrieve list of user's payment instrument records"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                user:
                                    $ref: "#/components/schemas/user.name"
                                paymentInstrument:
                                    type: "object"
                                    properties:
                                        identifier:
                                            description: "An unique number to identify a payment instrument; value of 'all' indicates to retrieve all records of an user"
                                            type: "string"
                                            example: "all"
                                cursor:
                                    $ref: "#/components/schemas/CursorRecordCountOnRequest"
                            required:
                                - user
                                - paymentInstrument
            responses:
                200:
                    description: "Returned list of payment instrument records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    cursor:
                                        $ref: "#/components/schemas/CursorOnResponse"
                                    paymentInstruments:
                                        $ref: "#/components/schemas/PaymentInstrumentRecords"
                                required:
                                    - result
                                    - paymentInstruments
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/FetchPaymentInstrument:
        summary: "Fetch more payment instrument records with cursor"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    $ref: "#/components/schemas/CursorOnRequest"
                            required:
                                - cursor
            responses:
                200:
                    description: "Returned list of payment instrument records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentInstruments:
                                        $ref: "#/components/schemas/PaymentInstrumentRecords"
                                required:
                                    - result
                                    - paymentInstruments
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetPaymentInstrumentDetails:
        summary: "Retrieve details of user's payment instrument record"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentInstrument:
                                    $ref: "#/components/schemas/paymentInstrument.identifier"
                            required:
                                - paymentInstrument
            responses:
                200:
                    description: "Returned list of payment instrument records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    paymentInstrument:
                                        allOf:
                                            - $ref: "#/components/schemas/RecordStatus"
                                            - $ref: "#/components/schemas/CreateDateTime"
                                            - $ref: "#/components/schemas/RecordDateTime"
                                            - $ref: "#/components/schemas/paymentInstrument.identifier"
                                            - $ref: "#/components/schemas/PaymentInstrumentRecord"
                                    paymentInstrumentProduct:
                                        $ref: "#/components/schemas/paymentInstrumentProduct.identifier"
                                    paymentInstrumentFunding:
                                        $ref: "#/components/schemas/paymentInstrumentFunding.identifier"
                                    user:
                                        $ref: "#/components/schemas/user.identifier"
                                    merchant:
                                        $ref: "#/components/schemas/merchant.identifier"
                                    organization:
                                        $ref: "#/components/schemas/organization.identifier"
                                required:
                                    - result
                                    - paymentInstrument
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/NewPaymentInstrument:
        summary: "Create a new payment instrument"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/organization.name"
                                user:
                                    $ref: "#/components/schemas/user.name"
                                merchant:
                                    $ref: "#/components/schemas/merchant.identifier"
                                paymentInstrumentProduct:
                                    $ref: "#/components/schemas/paymentInstrumentProduct.identifier"
                                paymentInstrumentFunding:
                                    $ref: "#/components/schemas/paymentInstrumentFunding.identifier"
                                paymentInstrument:
                                    allOf:
                                        - type: "object"
                                          properties:
                                            description:
                                                type: "string"
                                            branch:
                                                type: "string"
                                        - $ref: "#/components/schemas/paymentInstrument.autoTopup"
                                        - required:
                                            - description
                            required:
                                - organization
                                - user
                                - paymentInstrumentProduct
                                - paymentInstrument
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/UpdatePaymentInstrument:
        summary: "Update a payment instrument record"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentInstrumentFunding:
                                    $ref: "#/components/schemas/paymentInstrumentFunding.identifier"
                                paymentInstrument:
                                    allOf:
                                        - $ref: "#/components/schemas/paymentInstrument.identifier"
                                        - type: "object"
                                          properties:
                                            status:
                                                type: "string"
                                            description:
                                                type: "string"
                                            branch:
                                                type: "string"
                                        - $ref: "#/components/schemas/paymentInstrument.autoTopup"
                                        - required:
                                            - identifier
                            required:
                                - paymentInstrument
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DeletePaymentInstrument:
        summary: "Delete an existing payment instrument record"
        post:
            tags:
                -  "Payment Instrument"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                paymentInstrument:
                                    $ref: "#/components/schemas/paymentInstrument.identifier"
                            required:
                                - paymentInstrument
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetSubscribedContent:
        summary: "Retrieve list of subscribed content"
        post:
            tags:
                -  "Content"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                organization:
                                    $ref: "#/components/schemas/organization.name"
                            required:
                                - organization
            responses:
                200:
                    description: "Returned list of subscribed content records"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    contents:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                content:
                                                    type: "object"
                                                    properties:
                                                        rowId:
                                                            type: "string"
                                    paymentInstrument:
                                        allOf:
                                            - $ref: "#/components/schemas/RecordStatus"
                                            - $ref: "#/components/schemas/CreateDateTime"
                                            - $ref: "#/components/schemas/RecordDateTime"
                                            - $ref: "#/components/schemas/paymentInstrument.identifier"
                                            - $ref: "#/components/schemas/PaymentInstrumentRecord"
                                    paymentInstrumentProduct:
                                        $ref: "#/components/schemas/paymentInstrumentProduct.identifier"
                                    paymentInstrumentFunding:
                                        $ref: "#/components/schemas/paymentInstrumentFunding.identifier"
                                    user:
                                        $ref: "#/components/schemas/user.identifier"
                                    merchant:
                                        $ref: "#/components/schemas/merchant.identifier"
                                    organization:
                                        $ref: "#/components/schemas/organization.identifier"
                                required:
                                    - result
                                    - paymentInstrument
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetLifeMedicalInsuranceCity:
        summary: "Get list of city object for life medical insurance"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                            required:
                                - contentProvision
            responses:
                200:
                    description: "Returned list of city objects"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsuranceCities:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                city:
                                                    type: "object"
                                                    properties:
                                                        code:
                                                            type: "string"
                                                        name:
                                                            type: "string"
                                                    required:
                                                        - code
                                                        - name
                                            required:
                                                - city
                                required:
                                    - result
                                    - lifeMedicalInsuranceCities
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetLifeMedicalInsuranceProduct:
        summary: "Get list of life medical insurance product object"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                            required:
                                - contentProvision
            responses:
                200:
                    description: "Returned list of life medical insurance product objects"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsuranceProducts:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                lifeMedicalInsuranceProduct:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                        name:
                                                            type: "string"
                                                        description:
                                                            type: "string"
                                                        status:
                                                            type: "string"
                                                            enum:
                                                                - "active"
                                                                - "inactive"
                                                        type:
                                                            type: "string"
                                                            enum:
                                                                - "individual"
                                                                - "family"
                                                    required:
                                                        - identifier
                                                        - name
                                                        - description
                                                        - status
                                                        - type
                                            required:
                                                - lifeMedicalInsuranceProduct
                                required:
                                    - result
                                    - lifeMedicalInsuranceProducts
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetLifeMedicalInsurancePlan:
        summary: "Get list of life medical insurance plan object"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                                lifeMedicalInsuranceProduct:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                            required:
                                - contentProvision
            responses:
                200:
                    description: "Returned list of life medical insurance plan objects"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsurancePlans:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                lifeMedicalInsuranceProduct:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                    required:
                                                        - identifier
                                                lifeMedicalInsurancePlan:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                        name:
                                                            type: "string"
                                                        description:
                                                            type: "string"
                                                        recordStatus:
                                                            type: "string"
                                                            enum:
                                                                - "active"
                                                                - "inactive"
                                                        maximumHospitalizationCoverage:
                                                            type: "number"
                                                        premiumType:
                                                            type: "string"
                                                            enum:
                                                                - "flat"
                                                                - "band"
                                                        premiumAmount:
                                                            type: "number"
                                                        outpatientCoverageType:
                                                            type: "string"
                                                            enum:
                                                                - "individual"
                                                                - "family"
                                                        maximumOutpatientCoverage:
                                                            type: "number"
                                                        maximumHospitalizationRoomCoveragePerDay:
                                                            type: "number"
                                                        maximumNormalDeliveryCoverage:
                                                            type: "number"
                                                        maximumCSectionDeliveryCoverage:
                                                            type: "number"
                                                        maternityPremiumType:
                                                            type: "string"
                                                            enum:
                                                                - "flat"
                                                                - "band"
                                                        maternityPremiumAmount:
                                                            type: "number"
                                                        minimumMaternityCoverageAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        maximumMaternityCoverageAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        maternityCoverage:
                                                            type: "boolean"
                                                        minimumHospitalizationCoverageAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        maximumHospitalizationCoverageAge:
                                                            type: "integer"
                                                            format: "int32"
                                                    required:
                                                        - identifier
                                                        - name
                                                        - description
                                                        - status
                                                        - type
                                            required:
                                                - lifeMedicalInsuranceProduct
                                required:
                                    - result
                                    - lifeMedicalInsuranceProducts
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetLifeMedicalInsurancePlanBandPremiumsByProduct:
        summary: "Get list of life medical insurance plan premium by product"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                                lifeMedicalInsuranceProduct:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                            required:
                                - contentProvision
                                - lifeMedicalInsuranceProduct
            responses:
                200:
                    description: "Returned list of life medical insurance plan premiums"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsurancePremiums:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                lifeMedicalInsuranceProduct:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                    required:
                                                        - identifier
                                                lifeMedicalInsurancePlan:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                lifeMedicalInsurancePremium:
                                                    type: "object"
                                                    properties:
                                                        minimumAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        maximumAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        hospitalizationPremiumForMale:
                                                            type: "number"
                                                        hospitalizationPremiumForFemale:
                                                            type: "number"
                                                        maternityPremiumAmount:
                                                            type: "number"
                                                        outPatientPremiumAmount:
                                                            type: "number"
                                                    required:
                                                        - minimumAge
                                                        - maximumAge
                                                        - hospitalizationPremiumForMale
                                                        - hospitalizationPremiumForFemale
                                                        - maternityPremiumAmount
                                                        - outPatientPremiumAmount
                                            required:
                                                - lifeMedicalInsuranceProduct
                                                - lifeMedicalInsurancePlan
                                                - lifeMedicalInsurancePremium
                                required:
                                    - result
                                    - lifeMedicalInsurancePremiums
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetLifeMedicalInsurancePlanBandPremiumsByPlan:
        summary: "Get list of life medical insurance plan premium by plan"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                                lifeMedicalInsuranceProduct:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                lifeMedicalInsurancePlan:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                            required:
                                - contentProvision
                                - lifeMedicalInsurancePlan
            responses:
                200:
                    description: "Returned list of life medical insurance plan premiums"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsurancePremiums:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                lifeMedicalInsuranceProduct:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                    required:
                                                        - identifier
                                                lifeMedicalInsurancePlan:
                                                    type: "object"
                                                    properties:
                                                        identifier:
                                                            type: "string"
                                                lifeMedicalInsurancePremium:
                                                    type: "object"
                                                    properties:
                                                        minimumAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        maximumAge:
                                                            type: "integer"
                                                            format: "int32"
                                                        hospitalizationPremiumForMale:
                                                            type: "number"
                                                        hospitalizationPremiumForFemale:
                                                            type: "number"
                                                        maternityPremiumAmount:
                                                            type: "number"
                                                        outPatientPremiumAmount:
                                                            type: "number"
                                                    required:
                                                        - minimumAge
                                                        - maximumAge
                                                        - hospitalizationPremiumForMale
                                                        - hospitalizationPremiumForFemale
                                                        - maternityPremiumAmount
                                                        - outPatientPremiumAmount
                                            required:
                                                - lifeMedicalInsurancePlan
                                                - lifeMedicalInsurancePremium
                                required:
                                    - result
                                    - lifeMedicalInsurancePremiums
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/GetLifeMedicalInsurancePlanPremiumToPay:
        summary: "Get the life medical insurance plan premium for payment"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                                lifeMedicalInsuranceProduct:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                lifeMedicalInsurancePlan:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                insuredPersons:
                                    type: "array"
                                    items:
                                        type: "object"
                                        properties:
                                            insuredPerson:
                                                type: "object"
                                                properties:
                                                    name:
                                                        type: "string"
                                                    gender:
                                                        type: "string"
                                                        enum:
                                                            - "M"
                                                            - "F"
                                                    nationalRegistrationIdentityCard:
                                                        type: "string"
                                                    birthdate:
                                                        type: "string"
                                                        format: "date"
                                                    emailAddress:
                                                        type: "string"
                                                        format: "email"
                                                    phoneNumber:
                                                        type: "string"
                                                    maternityCoverage:
                                                        type: "boolean"
                                                    relationship:
                                                        type: "string"
                                                        enum:
                                                            - "self"
                                                            - "spouse"
                                                            - "child"
                                                required:
                                                    - name
                                                    - gender
                                                    - nationalRegistrationIdentityCard
                                                    - birthdate
                                                    - maternityCoverage
                                            correspondenceAddress:
                                                $ref: "#/components/schemas/MailingAddress"
                            required:
                                - contentProvision
                                - lifeMedicalInsurancePlan
                                - insuredPersons
            responses:
                200:
                    description: "Returned life medical insurance plan premium"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsurancePolicy:
                                        type: "object"
                                        properties:
                                            referenceNumber:
                                                type: "string"
                                        required:
                                            - referenceNumber
                                    insuredPersons:
                                        type: "array"
                                        items:
                                            type: "object"
                                            properties:
                                                insuredPerson:
                                                    type: "object"
                                                    properties:
                                                        name:
                                                            type: "string"
                                                        gender:
                                                            type: "string"
                                                            enum:
                                                                - "M"
                                                                - "F"
                                                        nationalRegistrationIdentityCard:
                                                            type: "string"
                                                        birthdate:
                                                            type: "string"
                                                            format: "date"
                                                        emailAddress:
                                                            type: "string"
                                                            format: "email"
                                                        phoneNumber:
                                                            type: "string"
                                                        maternityCoverage:
                                                            type: "boolean"
                                                        relationship:
                                                            type: "string"
                                                            enum:
                                                                - "self"
                                                                - "spouse"
                                                                - "child"
                                                        insurancePremiumReferenceNumber:
                                                            type: "string"
                                                        netPremiumAmount:
                                                            type: "number"
                                                        hospitalizationCoveragePremiumAmount:
                                                            type: "number"
                                                        maternityCoveragePremiumAmount:
                                                            type: "number"
                                                        discountAmounnt:
                                                            type: "number"
                                                    required:
                                                        - name
                                                        - gender
                                                        - nationalRegistrationIdentityCard
                                                        - birthdate
                                                        - maternityCoverage
                                                correspondenceAddress:
                                                    $ref: "#/components/schemas/MailingAddress"
                                required:
                                    - result
                                    - lifeMedicalInsurancePolicy
                                    - insuredPersons
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/PayLifeMedicalInsurancePlanPremium:
        summary: "Purchase life medical insurance policy"
        post:
            tags:
                -  "Life Medical Insurance [TODO]"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                contentProvision:
                                    type: "object"
                                    properties:
                                        serverIdentifier:
                                            type: "string"
                                    required:
                                        - serverIdentifier
                                lifeMedicalInsurancePlan:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                                lifeMedicalInsurancePolicy:
                                    type: "object"
                                    properties:
                                        referenceNumber:
                                            type: "string"
                                    required:
                                        - referenceNumber
                                insuredPersons:
                                    type: "array"
                                    items:
                                        type: "object"
                                        properties:
                                            insuredPerson:
                                                type: "object"
                                                properties:
                                                    name:
                                                        type: "string"
                                                    gender:
                                                        type: "string"
                                                        enum:
                                                            - "M"
                                                            - "F"
                                                    nationalRegistrationIdentityCard:
                                                        type: "string"
                                                    birthdate:
                                                        type: "string"
                                                        format: "date"
                                                    emailAddress:
                                                        type: "string"
                                                        format: "email"
                                                    phoneNumber:
                                                        type: "string"
                                                    maternityCoverage:
                                                        type: "boolean"
                                                    relationship:
                                                        type: "string"
                                                        enum:
                                                            - "self"
                                                            - "spouse"
                                                            - "child"
                                                    insurancePremiumReferenceNumber:
                                                        type: "string"
                                                    netPremiumAmount:
                                                        type: "number"
                                                    hospitalizationCoveragePremiumAmount:
                                                        type: "number"
                                                    maternityCoveragePremiumAmount:
                                                        type: "number"
                                                    discountAmounnt:
                                                        type: "number"
                                                required:
                                                    - name
                                                    - gender
                                                    - nationalRegistrationIdentityCard
                                                    - birthdate
                                                    - maternityCoverage
                                            correspondenceAddress:
                                                $ref: "#/components/schemas/MailingAddress"
                            required:
                                - contentProvision
                                - lifeMedicalInsurancePolicy
            responses:
                200:
                    description: "Returned the details of life medical insurance policy"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    result:
                                        $ref: "#/components/schemas/ResponseResult"
                                    lifeMedicalInsurancePolicy:
                                        type: "object"
                                        properties:
                                            referenceNumber:
                                                type: "string"
                                            identifier:
                                                description: "unique policy number to service provider"
                                                type: "string"
                                            issuanceDate:
                                                type: "string"
                                                format: "date"
                                            coverageStartDate:
                                                type: "string"
                                                format: "date"
                                            coverageEndDate:
                                                type: "string"
                                                format: "date"
                                            grossPremiumAmount:
                                                type: "number"
                                            netPremiumAmount:
                                                type: "number"
                                            policyCode:
                                                type: "string"
                                            invoiceURL:
                                                type: "string"
                                                format: "url"
                                        required:
                                            - identifier
                                            - issuanceDate
                                            - coverageStartDate
                                            - coverageEndDate
                                required:
                                    - result
                                    - lifeMedicalInsurancePolicy
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
    /command/DestroyCursor:
        summary: "Destroy an existing cursor"
        post:
            tags:
                -  "Cursor"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                cursor:
                                    type: "object"
                                    properties:
                                        identifier:
                                            type: "string"
                                    required:
                                        - identifier
                            required:
                                - cursor
            responses:
                default:
                    $ref: "#/components/responses/ResultOnlyResponse"
